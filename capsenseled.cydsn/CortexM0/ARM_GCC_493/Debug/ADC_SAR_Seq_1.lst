ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_idiv
  18              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_SAR_Seq_1_Init
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_SAR_Seq_1_Init, %function
  24              	ADC_SAR_Seq_1_Init:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 2


  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 3


  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  27              		.loc 1 95 0
  28              		.cfi_startproc
  29 0000 10B5     		push	{r4, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 4


 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  33              		.loc 1 172 0
  34 0002 0F20     		mov	r0, #15
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  38              		.loc 1 173 0
  39 000a 0F20     		mov	r0, #15
  40 000c 4249     		ldr	r1, .L12
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  43              		.loc 1 177 0
  44 0012 0F22     		mov	r2, #15
  45 0014 414B     		ldr	r3, .L12+4
  46 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  47              		.loc 1 180 0
  48 0018 414B     		ldr	r3, .L12+8
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 5


  49 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  50              		.loc 1 178 0
  51 001c 002B     		cmp	r3, #0
  52 001e 01DA     		bge	.L10
  53 0020 4049     		ldr	r1, .L12+12
  54 0022 00E0     		b	.L2
  55              	.L10:
  56 0024 4049     		ldr	r1, .L12+16
  57              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  58              		.loc 1 178 0 is_stmt 0 discriminator 4
  59 0026 414A     		ldr	r2, .L12+20
  60 0028 1368     		ldr	r3, [r2]
  61 002a 0B43     		orr	r3, r1
  62 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  63              		.loc 1 182 0 is_stmt 1 discriminator 4
  64 002e 404A     		ldr	r2, .L12+24
  65 0030 404B     		ldr	r3, .L12+28
  66 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  67              		.loc 1 183 0 discriminator 4
  68 0034 404A     		ldr	r2, .L12+32
  69 0036 414B     		ldr	r3, .L12+36
  70 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  71              		.loc 1 184 0 discriminator 4
  72 003a 0023     		mov	r3, #0
  73 003c 404A     		ldr	r2, .L12+40
  74 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0040 404A     		ldr	r2, .L12+44
  77 0042 4149     		ldr	r1, .L12+48
  78 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0046 4149     		ldr	r1, .L12+52
  81 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  82              		.loc 1 190 0 discriminator 4
  83 004a 414A     		ldr	r2, .L12+56
  84 004c 1168     		ldr	r1, [r2]
  85 004e 8020     		mov	r0, #128
  86 0050 4002     		lsl	r0, r0, #9
  87 0052 0143     		orr	r1, r0
  88 0054 1160     		str	r1, [r2]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  89              		.loc 1 193 0 discriminator 4
  90 0056 3F49     		ldr	r1, .L12+60
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 6


  91 0058 0A68     		ldr	r2, [r1]
  92 005a 0243     		orr	r2, r0
  93 005c 0A60     		str	r2, [r1]
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  94              		.loc 1 197 0 discriminator 4
  95 005e 3E4A     		ldr	r2, .L12+64
  96 0060 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  97              		.loc 1 198 0 discriminator 4
  98 0062 3E4A     		ldr	r2, .L12+68
  99 0064 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 100              		.loc 1 199 0 discriminator 4
 101 0066 0122     		mov	r2, #1
 102 0068 3D4B     		ldr	r3, .L12+72
 103 006a 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 104              		.loc 1 206 0 discriminator 4
 105 006c 3D4A     		ldr	r2, .L12+76
 106 006e 1168     		ldr	r1, [r2]
 107              	.LVL2:
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 108              		.loc 1 221 0 discriminator 4
 109 0070 3D4B     		ldr	r3, .L12+80
 110 0072 0B40     		and	r3, r1
 111 0074 8021     		mov	r1, #128
 112              	.LVL3:
 113 0076 8905     		lsl	r1, r1, #22
 114 0078 0B43     		orr	r3, r1
 115              	.LVL4:
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 7


 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 116              		.loc 1 226 0 discriminator 4
 117 007a 1360     		str	r3, [r2]
 118              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 119              		.loc 1 232 0 discriminator 4
 120 007c 0024     		mov	r4, #0
 121 007e 47E0     		b	.L3
 122              	.LVL6:
 123              	.L9:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 124              		.loc 1 234 0
 125 0080 3A49     		ldr	r1, .L12+84
 126 0082 A200     		lsl	r2, r4, #2
 127 0084 5058     		ldr	r0, [r2, r1]
 128 0086 DC23     		mov	r3, #220
 129 0088 9B01     		lsl	r3, r3, #6
 130 008a 0340     		and	r3, r0
 131              	.LVL7:
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 132              		.loc 1 236 0
 133 008c 0919     		add	r1, r1, r4
 134 008e 097C     		ldrb	r1, [r1, #16]
 135 0090 0B43     		orr	r3, r1
 136              	.LVL8:
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 137              		.loc 1 253 0
 138 0092 3749     		ldr	r1, .L12+88
 139 0094 8C46     		mov	ip, r1
 140 0096 6244     		add	r2, r2, ip
 141 0098 1360     		str	r3, [r2]
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 142              		.loc 1 255 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 8


 143 009a C307     		lsl	r3, r0, #31
 144 009c 08D5     		bpl	.L4
 145              	.LVL9:
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 146              		.loc 1 257 0
 147 009e 2E49     		ldr	r1, .L12+64
 148 00a0 0868     		ldr	r0, [r1]
 149 00a2 8022     		mov	r2, #128
 150              	.LVL10:
 151 00a4 5202     		lsl	r2, r2, #9
 152 00a6 131C     		mov	r3, r2
 153 00a8 A340     		lsl	r3, r3, r4
 154 00aa 1B0C     		lsr	r3, r3, #16
 155 00ac 0343     		orr	r3, r0
 156 00ae 0B60     		str	r3, [r1]
 157              	.LVL11:
 158              	.L4:
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 159              		.loc 1 260 0
 160 00b0 A300     		lsl	r3, r4, #2
 161 00b2 2E4A     		ldr	r2, .L12+84
 162              	.LVL12:
 163 00b4 9B58     		ldr	r3, [r3, r2]
 164 00b6 9B07     		lsl	r3, r3, #30
 165 00b8 08D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 166              		.loc 1 262 0
 167 00ba 2849     		ldr	r1, .L12+68
 168 00bc 0868     		ldr	r0, [r1]
 169 00be 8022     		mov	r2, #128
 170              	.LVL13:
 171 00c0 5202     		lsl	r2, r2, #9
 172 00c2 131C     		mov	r3, r2
 173 00c4 A340     		lsl	r3, r3, r4
 174 00c6 1B0C     		lsr	r3, r3, #16
 175 00c8 0343     		orr	r3, r0
 176 00ca 0B60     		str	r3, [r1]
 177              	.L5:
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 9


 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 178              		.loc 1 282 0
 179 00cc A300     		lsl	r3, r4, #2
 180 00ce 274A     		ldr	r2, .L12+84
 181              	.LVL14:
 182 00d0 9B58     		ldr	r3, [r3, r2]
 183 00d2 9A05     		lsl	r2, r3, #22
 184 00d4 02D5     		bpl	.L11
 185              	.LVL15:
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 186              		.loc 1 284 0
 187 00d6 8020     		mov	r0, #128
 188 00d8 4000     		lsl	r0, r0, #1
 189 00da 01E0     		b	.L6
 190              	.L11:
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 191              		.loc 1 288 0
 192 00dc 8020     		mov	r0, #128
 193 00de 4001     		lsl	r0, r0, #5
 194              	.L6:
 195              	.LVL16:
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 196              		.loc 1 291 0
 197 00e0 DB05     		lsl	r3, r3, #23
 198 00e2 04D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 199              		.loc 1 298 0
 200 00e4 6300     		lsl	r3, r4, #1
 201 00e6 0021     		mov	r1, #0
 202 00e8 224A     		ldr	r2, .L12+92
 203 00ea 9952     		strh	r1, [r3, r2]
 204 00ec 03E0     		b	.L8
 205              	.L7:
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 10


 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 206              		.loc 1 307 0
 207 00ee 6300     		lsl	r3, r4, #1
 208 00f0 0021     		mov	r1, #0
 209 00f2 204A     		ldr	r2, .L12+92
 210 00f4 9952     		strh	r1, [r3, r2]
 211              	.L8:
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 212              		.loc 1 311 0 discriminator 2
 213 00f6 204B     		ldr	r3, .L12+96
 214 00f8 5843     		mul	r0, r3
 215              	.LVL17:
 216 00fa 204B     		ldr	r3, .L12+100
 217 00fc 9C46     		mov	ip, r3
 218 00fe 6044     		add	r0, r0, ip
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 219              		.loc 1 312 0 discriminator 2
 220 0100 1F49     		ldr	r1, .L12+104
 221 0102 FFF7FEFF 		bl	__aeabi_idiv
 222              	.LVL18:
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 223              		.loc 1 311 0 discriminator 2
 224 0106 00B2     		sxth	r0, r0
 225 0108 A200     		lsl	r2, r4, #2
 226 010a 1E4B     		ldr	r3, .L12+108
 227 010c D050     		str	r0, [r2, r3]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 228              		.loc 1 232 0 discriminator 2
 229 010e 0134     		add	r4, r4, #1
 230              	.LVL19:
 231              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 232              		.loc 1 232 0 is_stmt 0 discriminator 1
 233 0110 032C     		cmp	r4, #3
 234 0112 B5D9     		bls	.L9
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 235              		.loc 1 314 0 is_stmt 1
 236              		@ sp needed
 237              	.LVL20:
 238 0114 10BD     		pop	{r4, pc}
 239              	.L13:
 240 0116 C046     		.align	2
 241              	.L12:
 242 0118 00000000 		.word	ADC_SAR_Seq_1_ISR
 243 011c 20003A40 		.word	1077542944
 244 0120 80033A40 		.word	1077543808
 245 0124 70201013 		.word	319823984
 246 0128 70200013 		.word	318775408
 247 012c 00003A40 		.word	1077542912
 248 0130 8C000080 		.word	-2147483508
 249 0134 04003A40 		.word	1077542916
 250 0138 0000FF07 		.word	134152192
 251 013c 18003A40 		.word	1077542936
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 11


 252 0140 1C003A40 		.word	1077542940
 253 0144 04000400 		.word	262148
 254 0148 10003A40 		.word	1077542928
 255 014c 14003A40 		.word	1077542932
 256 0150 00033A40 		.word	1077543680
 257 0154 40033A40 		.word	1077543744
 258 0158 28023A40 		.word	1077543464
 259 015c 38023A40 		.word	1077543480
 260 0160 18023A40 		.word	1077543448
 261 0164 30003A40 		.word	1077542960
 262 0168 FEFFFFDF 		.word	-536870914
 263 016c 00000000 		.word	.LANCHOR0
 264 0170 80003A40 		.word	1077543040
 265 0174 00000000 		.word	ADC_SAR_Seq_1_offset
 266 0178 10270000 		.word	10000
 267 017c E40C0000 		.word	3300
 268 0180 C8190000 		.word	6600
 269 0184 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 270              		.cfi_endproc
 271              	.LFE3:
 272              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 273              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 274              		.align	2
 275              		.global	ADC_SAR_Seq_1_Enable
 276              		.code	16
 277              		.thumb_func
 278              		.type	ADC_SAR_Seq_1_Enable, %function
 279              	ADC_SAR_Seq_1_Enable:
 280              	.LFB4:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 281              		.loc 1 331 0
 282              		.cfi_startproc
 283 0000 08B5     		push	{r3, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 3, -8
 286              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 287              		.loc 1 332 0
 288 0002 094B     		ldr	r3, .L17
 289 0004 1B68     		ldr	r3, [r3]
 290 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 12


 291 0008 0CDB     		blt	.L14
 292              	.L16:
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 293              		.loc 1 336 0 discriminator 1
 294 000a 084B     		ldr	r3, .L17+4
 295 000c 1B68     		ldr	r3, [r3]
 296 000e 002B     		cmp	r3, #0
 297 0010 FBDB     		blt	.L16
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 298              		.loc 1 342 0
 299 0012 054A     		ldr	r2, .L17
 300 0014 1368     		ldr	r3, [r2]
 301 0016 8021     		mov	r1, #128
 302 0018 0906     		lsl	r1, r1, #24
 303 001a 0B43     		orr	r3, r1
 304 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 305              		.loc 1 345 0
 306 001e 0A20     		mov	r0, #10
 307 0020 FFF7FEFF 		bl	CyDelayUs
 308              	.LVL21:
 309              	.L14:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 310              		.loc 1 347 0
 311              		@ sp needed
 312 0024 08BD     		pop	{r3, pc}
 313              	.L18:
 314 0026 C046     		.align	2
 315              	.L17:
 316 0028 00003A40 		.word	1077542912
 317 002c 08023A40 		.word	1077543432
 318              		.cfi_endproc
 319              	.LFE4:
 320              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 321              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 322              		.align	2
 323              		.global	ADC_SAR_Seq_1_Start
 324              		.code	16
 325              		.thumb_func
 326              		.type	ADC_SAR_Seq_1_Start, %function
 327              	ADC_SAR_Seq_1_Start:
 328              	.LFB2:
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 329              		.loc 1 64 0
 330              		.cfi_startproc
 331 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 13


 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 335              		.loc 1 66 0
 336 0002 064B     		ldr	r3, .L21
 337 0004 1B78     		ldrb	r3, [r3]
 338 0006 002B     		cmp	r3, #0
 339 0008 04D1     		bne	.L20
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 340              		.loc 1 68 0
 341 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 342              	.LVL22:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 343              		.loc 1 69 0
 344 000e 0122     		mov	r2, #1
 345 0010 024B     		ldr	r3, .L21
 346 0012 1A70     		strb	r2, [r3]
 347              	.L20:
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 348              		.loc 1 71 0
 349 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 350              	.LVL23:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 351              		.loc 1 72 0
 352              		@ sp needed
 353 0018 08BD     		pop	{r3, pc}
 354              	.L22:
 355 001a C046     		.align	2
 356              	.L21:
 357 001c 00000000 		.word	.LANCHOR1
 358              		.cfi_endproc
 359              	.LFE2:
 360              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 361              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_SAR_Seq_1_Stop
 364              		.code	16
 365              		.thumb_func
 366              		.type	ADC_SAR_Seq_1_Stop, %function
 367              	ADC_SAR_Seq_1_Stop:
 368              	.LFB5:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 14


 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 369              		.loc 1 366 0
 370              		.cfi_startproc
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 371              		.loc 1 367 0
 372 0000 024A     		ldr	r2, .L24
 373 0002 1368     		ldr	r3, [r2]
 374 0004 5B00     		lsl	r3, r3, #1
 375 0006 5B08     		lsr	r3, r3, #1
 376 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 377              		.loc 1 368 0
 378              		@ sp needed
 379 000a 7047     		bx	lr
 380              	.L25:
 381              		.align	2
 382              	.L24:
 383 000c 00003A40 		.word	1077542912
 384              		.cfi_endproc
 385              	.LFE5:
 386              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 387              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 388              		.align	2
 389              		.global	ADC_SAR_Seq_1_StartConvert
 390              		.code	16
 391              		.thumb_func
 392              		.type	ADC_SAR_Seq_1_StartConvert, %function
 393              	ADC_SAR_Seq_1_StartConvert:
 394              	.LFB6:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 395              		.loc 1 392 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 15


 396              		.cfi_startproc
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 397              		.loc 1 394 0
 398 0000 034A     		ldr	r2, .L27
 399 0002 1368     		ldr	r3, [r2]
 400 0004 8021     		mov	r1, #128
 401 0006 4902     		lsl	r1, r1, #9
 402 0008 0B43     		orr	r3, r1
 403 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 404              		.loc 1 399 0
 405              		@ sp needed
 406 000c 7047     		bx	lr
 407              	.L28:
 408 000e C046     		.align	2
 409              	.L27:
 410 0010 04003A40 		.word	1077542916
 411              		.cfi_endproc
 412              	.LFE6:
 413              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 414              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_SAR_Seq_1_StopConvert
 417              		.code	16
 418              		.thumb_func
 419              		.type	ADC_SAR_Seq_1_StopConvert, %function
 420              	ADC_SAR_Seq_1_StopConvert:
 421              	.LFB7:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 422              		.loc 1 417 0
 423              		.cfi_startproc
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 424              		.loc 1 419 0
 425 0000 024A     		ldr	r2, .L30
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 16


 426 0002 1168     		ldr	r1, [r2]
 427 0004 024B     		ldr	r3, .L30+4
 428 0006 0B40     		and	r3, r1
 429 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 430              		.loc 1 421 0
 431              		@ sp needed
 432 000a 7047     		bx	lr
 433              	.L31:
 434              		.align	2
 435              	.L30:
 436 000c 04003A40 		.word	1077542916
 437 0010 FFFFFEFF 		.word	-65537
 438              		.cfi_endproc
 439              	.LFE7:
 440              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 441              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 442              		.align	2
 443              		.global	ADC_SAR_Seq_1_IsEndConversion
 444              		.code	16
 445              		.thumb_func
 446              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 447              	ADC_SAR_Seq_1_IsEndConversion:
 448              	.LFB8:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 449              		.loc 1 451 0
 450              		.cfi_startproc
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 17


 451              	.LVL24:
 452 0000 021C     		mov	r2, r0
 453              	.LVL25:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 454              		.loc 1 454 0
 455 0002 8307     		lsl	r3, r0, #30
 456 0004 0CD0     		beq	.L36
 457              	.LVL26:
 458              	.L35:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 459              		.loc 1 458 0 discriminator 2
 460 0006 074B     		ldr	r3, .L37
 461 0008 1B68     		ldr	r3, [r3]
 462 000a 0120     		mov	r0, #1
 463 000c 1840     		and	r0, r3
 464              	.LVL27:
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 465              		.loc 1 459 0 discriminator 2
 466 000e 01D1     		bne	.L34
 467              		.loc 1 459 0 is_stmt 0 discriminator 1
 468 0010 9307     		lsl	r3, r2, #30
 469 0012 F8D4     		bmi	.L35
 470              	.L34:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 471              		.loc 1 461 0 is_stmt 1
 472 0014 0028     		cmp	r0, #0
 473 0016 04D0     		beq	.L33
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 474              		.loc 1 464 0
 475 0018 0122     		mov	r2, #1
 476              	.LVL28:
 477 001a 024B     		ldr	r3, .L37
 478 001c 1A60     		str	r2, [r3]
 479 001e 00E0     		b	.L33
 480              	.LVL29:
 481              	.L36:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 482              		.loc 1 452 0
 483 0020 0020     		mov	r0, #0
 484              	.LVL30:
 485              	.L33:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 18


 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 486              		.loc 1 486 0
 487              		@ sp needed
 488 0022 7047     		bx	lr
 489              	.L38:
 490              		.align	2
 491              	.L37:
 492 0024 10023A40 		.word	1077543440
 493              		.cfi_endproc
 494              	.LFE8:
 495              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 496              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 497              		.align	2
 498              		.global	ADC_SAR_Seq_1_GetResult16
 499              		.code	16
 500              		.thumb_func
 501              		.type	ADC_SAR_Seq_1_GetResult16, %function
 502              	ADC_SAR_Seq_1_GetResult16:
 503              	.LFB9:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 504              		.loc 1 505 0
 505              		.cfi_startproc
 506              	.LVL31:
 507 0000 10B5     		push	{r4, lr}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 19


 510              		.cfi_offset 14, -4
 511 0002 041E     		sub	r4, r0, #0
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 512              		.loc 1 509 0
 513 0004 032C     		cmp	r4, #3
 514 0006 02D9     		bls	.L40
 515              		.loc 1 509 0 is_stmt 0 discriminator 1
 516 0008 0020     		mov	r0, #0
 517              	.LVL32:
 518 000a FFF7FEFF 		bl	CyHalt
 519              	.LVL33:
 520              	.L40:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 521              		.loc 1 511 0 is_stmt 1
 522 000e 032C     		cmp	r4, #3
 523 0010 07D8     		bhi	.L42
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 524              		.loc 1 513 0
 525 0012 A400     		lsl	r4, r4, #2
 526              	.LVL34:
 527 0014 044B     		ldr	r3, .L43
 528 0016 9C46     		mov	ip, r3
 529 0018 6444     		add	r4, r4, ip
 530 001a 2068     		ldr	r0, [r4]
 531 001c 0004     		lsl	r0, r0, #16
 532 001e 000C     		lsr	r0, r0, #16
 533              	.LVL35:
 534 0020 00E0     		b	.L41
 535              	.LVL36:
 536              	.L42:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 537              		.loc 1 521 0
 538 0022 0020     		mov	r0, #0
 539              	.LVL37:
 540              	.L41:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 541              		.loc 1 525 0
 542 0024 00B2     		sxth	r0, r0
 543              	.LVL38:
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 544              		.loc 1 526 0
 545              		@ sp needed
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 20


 546 0026 10BD     		pop	{r4, pc}
 547              	.L44:
 548              		.align	2
 549              	.L43:
 550 0028 80013A40 		.word	1077543296
 551              		.cfi_endproc
 552              	.LFE9:
 553              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 554              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 555              		.align	2
 556              		.global	ADC_SAR_Seq_1_SetChanMask
 557              		.code	16
 558              		.thumb_func
 559              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 560              	ADC_SAR_Seq_1_SetChanMask:
 561              	.LFB10:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 562              		.loc 1 550 0
 563              		.cfi_startproc
 564              	.LVL39:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 565              		.loc 1 551 0
 566 0000 0F23     		mov	r3, #15
 567 0002 1840     		and	r0, r3
 568              	.LVL40:
 569 0004 014B     		ldr	r3, .L46
 570 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 571              		.loc 1 552 0
 572              		@ sp needed
 573 0008 7047     		bx	lr
 574              	.L47:
 575 000a C046     		.align	2
 576              	.L46:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 21


 577 000c 20003A40 		.word	1077542944
 578              		.cfi_endproc
 579              	.LFE10:
 580              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 581              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 582              		.align	2
 583              		.global	ADC_SAR_Seq_1_SetLowLimit
 584              		.code	16
 585              		.thumb_func
 586              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 587              	ADC_SAR_Seq_1_SetLowLimit:
 588              	.LFB11:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 589              		.loc 1 594 0
 590              		.cfi_startproc
 591              	.LVL41:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 22


 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 592              		.loc 1 595 0
 593 0000 054A     		ldr	r2, .L49
 594 0002 1368     		ldr	r3, [r2]
 595 0004 1B0C     		lsr	r3, r3, #16
 596 0006 1B04     		lsl	r3, r3, #16
 597 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 598              		.loc 1 596 0
 599 000a 1368     		ldr	r3, [r2]
 600 000c 0004     		lsl	r0, r0, #16
 601              	.LVL42:
 602 000e 000C     		lsr	r0, r0, #16
 603 0010 1843     		orr	r0, r3
 604 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 605              		.loc 1 597 0
 606              		@ sp needed
 607 0014 7047     		bx	lr
 608              	.L50:
 609 0016 C046     		.align	2
 610              	.L49:
 611 0018 18003A40 		.word	1077542936
 612              		.cfi_endproc
 613              	.LFE11:
 614              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 615              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 616              		.align	2
 617              		.global	ADC_SAR_Seq_1_SetHighLimit
 618              		.code	16
 619              		.thumb_func
 620              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 621              	ADC_SAR_Seq_1_SetHighLimit:
 622              	.LFB12:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 623              		.loc 1 615 0
 624              		.cfi_startproc
 625              	.LVL43:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 626              		.loc 1 616 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 23


 627 0000 044A     		ldr	r2, .L52
 628 0002 1368     		ldr	r3, [r2]
 629 0004 1B04     		lsl	r3, r3, #16
 630 0006 1B0C     		lsr	r3, r3, #16
 631 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 632              		.loc 1 617 0
 633 000a 1368     		ldr	r3, [r2]
 634 000c 0004     		lsl	r0, r0, #16
 635              	.LVL44:
 636 000e 1843     		orr	r0, r3
 637 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 638              		.loc 1 618 0
 639              		@ sp needed
 640 0012 7047     		bx	lr
 641              	.L53:
 642              		.align	2
 643              	.L52:
 644 0014 18003A40 		.word	1077542936
 645              		.cfi_endproc
 646              	.LFE12:
 647              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 648              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 649              		.align	2
 650              		.global	ADC_SAR_Seq_1_SetLimitMask
 651              		.code	16
 652              		.thumb_func
 653              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 654              	ADC_SAR_Seq_1_SetLimitMask:
 655              	.LFB13:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 656              		.loc 1 639 0
 657              		.cfi_startproc
 658              	.LVL45:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 659              		.loc 1 640 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 24


 660 0000 0F23     		mov	r3, #15
 661 0002 1840     		and	r0, r3
 662              	.LVL46:
 663 0004 014B     		ldr	r3, .L55
 664 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 665              		.loc 1 641 0
 666              		@ sp needed
 667 0008 7047     		bx	lr
 668              	.L56:
 669 000a C046     		.align	2
 670              	.L55:
 671 000c 38023A40 		.word	1077543480
 672              		.cfi_endproc
 673              	.LFE13:
 674              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 675              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 676              		.align	2
 677              		.global	ADC_SAR_Seq_1_SetSatMask
 678              		.code	16
 679              		.thumb_func
 680              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 681              	ADC_SAR_Seq_1_SetSatMask:
 682              	.LFB14:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 683              		.loc 1 662 0
 684              		.cfi_startproc
 685              	.LVL47:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 686              		.loc 1 663 0
 687 0000 0F23     		mov	r3, #15
 688 0002 1840     		and	r0, r3
 689              	.LVL48:
 690 0004 014B     		ldr	r3, .L58
 691 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 692              		.loc 1 664 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 25


 693              		@ sp needed
 694 0008 7047     		bx	lr
 695              	.L59:
 696 000a C046     		.align	2
 697              	.L58:
 698 000c 28023A40 		.word	1077543464
 699              		.cfi_endproc
 700              	.LFE14:
 701              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 702              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 703              		.align	2
 704              		.global	ADC_SAR_Seq_1_SetOffset
 705              		.code	16
 706              		.thumb_func
 707              		.type	ADC_SAR_Seq_1_SetOffset, %function
 708              	ADC_SAR_Seq_1_SetOffset:
 709              	.LFB15:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 710              		.loc 1 690 0
 711              		.cfi_startproc
 712              	.LVL49:
 713 0000 38B5     		push	{r3, r4, r5, lr}
 714              		.cfi_def_cfa_offset 16
 715              		.cfi_offset 3, -16
 716              		.cfi_offset 4, -12
 717              		.cfi_offset 5, -8
 718              		.cfi_offset 14, -4
 719 0002 041C     		mov	r4, r0
 720 0004 0D1C     		mov	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 721              		.loc 1 692 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 26


 722 0006 0328     		cmp	r0, #3
 723 0008 02D9     		bls	.L61
 724              		.loc 1 692 0 is_stmt 0 discriminator 1
 725 000a 0020     		mov	r0, #0
 726              	.LVL50:
 727 000c FFF7FEFF 		bl	CyHalt
 728              	.LVL51:
 729              	.L61:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 730              		.loc 1 694 0 is_stmt 1
 731 0010 6400     		lsl	r4, r4, #1
 732              	.LVL52:
 733 0012 014B     		ldr	r3, .L62
 734 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 735              		.loc 1 695 0
 736              		@ sp needed
 737 0016 38BD     		pop	{r3, r4, r5, pc}
 738              	.L63:
 739              		.align	2
 740              	.L62:
 741 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 742              		.cfi_endproc
 743              	.LFE15:
 744              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 745              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 746              		.align	2
 747              		.global	ADC_SAR_Seq_1_SetGain
 748              		.code	16
 749              		.thumb_func
 750              		.type	ADC_SAR_Seq_1_SetGain, %function
 751              	ADC_SAR_Seq_1_SetGain:
 752              	.LFB16:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 27


 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 753              		.loc 1 724 0
 754              		.cfi_startproc
 755              	.LVL53:
 756 0000 38B5     		push	{r3, r4, r5, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 3, -16
 759              		.cfi_offset 4, -12
 760              		.cfi_offset 5, -8
 761              		.cfi_offset 14, -4
 762 0002 041C     		mov	r4, r0
 763 0004 0D1C     		mov	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 764              		.loc 1 726 0
 765 0006 0328     		cmp	r0, #3
 766 0008 02D9     		bls	.L65
 767              		.loc 1 726 0 is_stmt 0 discriminator 1
 768 000a 0020     		mov	r0, #0
 769              	.LVL54:
 770 000c FFF7FEFF 		bl	CyHalt
 771              	.LVL55:
 772              	.L65:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 773              		.loc 1 728 0 is_stmt 1
 774 0010 A400     		lsl	r4, r4, #2
 775              	.LVL56:
 776 0012 014B     		ldr	r3, .L66
 777 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 778              		.loc 1 729 0
 779              		@ sp needed
 780              	.LVL57:
 781 0016 38BD     		pop	{r3, r4, r5, pc}
 782              	.L67:
 783              		.align	2
 784              	.L66:
 785 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 786              		.cfi_endproc
 787              	.LFE16:
 788              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 789              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 790              		.align	2
 791              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 792              		.code	16
 793              		.thumb_func
 794              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 795              	ADC_SAR_Seq_1_CountsTo_mVolts:
 796              	.LFB17:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 28


 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 797              		.loc 1 757 0
 798              		.cfi_startproc
 799              	.LVL58:
 800 0000 38B5     		push	{r3, r4, r5, lr}
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 3, -16
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 5, -8
 805              		.cfi_offset 14, -4
 806 0002 041C     		mov	r4, r0
 807 0004 0D1C     		mov	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 808              		.loc 1 761 0
 809 0006 0328     		cmp	r0, #3
 810 0008 02D9     		bls	.L69
 811              		.loc 1 761 0 is_stmt 0 discriminator 1
 812 000a 0020     		mov	r0, #0
 813              	.LVL59:
 814 000c FFF7FEFF 		bl	CyHalt
 815              	.LVL60:
 816              	.L69:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 29


 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 817              		.loc 1 772 0 is_stmt 1
 818 0010 6300     		lsl	r3, r4, #1
 819 0012 0F4A     		ldr	r2, .L72
 820 0014 995A     		ldrh	r1, [r3, r2]
 821 0016 691A     		sub	r1, r5, r1
 822 0018 09B2     		sxth	r1, r1
 823              	.LVL61:
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 824              		.loc 1 774 0
 825 001a 0E48     		ldr	r0, .L72+4
 826 001c 021C     		mov	r2, r0
 827 001e 4A43     		mul	r2, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 828              		.loc 1 775 0
 829 0020 0029     		cmp	r1, #0
 830 0022 06DD     		ble	.L70
 831              		.loc 1 775 0 is_stmt 0 discriminator 1
 832 0024 A300     		lsl	r3, r4, #2
 833 0026 0C49     		ldr	r1, .L72+8
 834              	.LVL62:
 835 0028 5B58     		ldr	r3, [r3, r1]
 836 002a D80F     		lsr	r0, r3, #31
 837 002c C018     		add	r0, r0, r3
 838 002e 4310     		asr	r3, r0, #1
 839 0030 06E0     		b	.L71
 840              	.LVL63:
 841              	.L70:
 842              		.loc 1 775 0 discriminator 2
 843 0032 A300     		lsl	r3, r4, #2
 844 0034 0849     		ldr	r1, .L72+8
 845              	.LVL64:
 846 0036 5B58     		ldr	r3, [r3, r1]
 847 0038 D80F     		lsr	r0, r3, #31
 848 003a C318     		add	r3, r0, r3
 849 003c 5B10     		asr	r3, r3, #1
 850 003e 5B42     		neg	r3, r3
 851              	.L71:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 852              		.loc 1 774 0 is_stmt 1
 853 0040 D018     		add	r0, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 854              		.loc 1 776 0
 855 0042 A400     		lsl	r4, r4, #2
 856              	.LVL65:
 857 0044 044B     		ldr	r3, .L72+8
 858 0046 E158     		ldr	r1, [r4, r3]
 859 0048 FFF7FEFF 		bl	__aeabi_idiv
 860              	.LVL66:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 861              		.loc 1 778 0
 862 004c 00B2     		sxth	r0, r0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 30


 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 863              		.loc 1 779 0
 864              		@ sp needed
 865 004e 38BD     		pop	{r3, r4, r5, pc}
 866              	.L73:
 867              		.align	2
 868              	.L72:
 869 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 870 0054 10270000 		.word	10000
 871 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 872              		.cfi_endproc
 873              	.LFE17:
 874              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 875              		.global	__aeabi_lmul
 876              		.global	__aeabi_ldivmod
 877              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 878              		.align	2
 879              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 880              		.code	16
 881              		.thumb_func
 882              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 883              	ADC_SAR_Seq_1_CountsTo_uVolts:
 884              	.LFB18:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 885              		.loc 1 811 0
 886              		.cfi_startproc
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 31


 887              	.LVL67:
 888 0000 38B5     		push	{r3, r4, r5, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 3, -16
 891              		.cfi_offset 4, -12
 892              		.cfi_offset 5, -8
 893              		.cfi_offset 14, -4
 894 0002 051C     		mov	r5, r0
 895 0004 0C1C     		mov	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 896              		.loc 1 815 0
 897 0006 0328     		cmp	r0, #3
 898 0008 02D9     		bls	.L75
 899              		.loc 1 815 0 is_stmt 0 discriminator 1
 900 000a 0020     		mov	r0, #0
 901              	.LVL68:
 902 000c FFF7FEFF 		bl	CyHalt
 903              	.LVL69:
 904              	.L75:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 905              		.loc 1 826 0 is_stmt 1
 906 0010 6A00     		lsl	r2, r5, #1
 907 0012 084B     		ldr	r3, .L76
 908 0014 D05A     		ldrh	r0, [r2, r3]
 909 0016 201A     		sub	r0, r4, r0
 910 0018 00B2     		sxth	r0, r0
 911              	.LVL70:
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 912              		.loc 1 828 0
 913 001a C117     		asr	r1, r0, #31
 914 001c 064A     		ldr	r2, .L76+4
 915 001e 0023     		mov	r3, #0
 916 0020 FFF7FEFF 		bl	__aeabi_lmul
 917              	.LVL71:
 918 0024 AD00     		lsl	r5, r5, #2
 919              	.LVL72:
 920 0026 054B     		ldr	r3, .L76+8
 921 0028 EA58     		ldr	r2, [r5, r3]
 922 002a D317     		asr	r3, r2, #31
 923 002c FFF7FEFF 		bl	__aeabi_ldivmod
 924              	.LVL73:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 32


 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 925              		.loc 1 831 0
 926              		@ sp needed
 927 0030 38BD     		pop	{r3, r4, r5, pc}
 928              	.L77:
 929 0032 C046     		.align	2
 930              	.L76:
 931 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 932 0038 80969800 		.word	10000000
 933 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 934              		.cfi_endproc
 935              	.LFE18:
 936              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 937              		.global	__aeabi_i2f
 938              		.global	__aeabi_fmul
 939              		.global	__aeabi_fdiv
 940              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 941              		.align	2
 942              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 943              		.code	16
 944              		.thumb_func
 945              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 946              	ADC_SAR_Seq_1_CountsTo_Volts:
 947              	.LFB19:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 948              		.loc 1 856 0
 949              		.cfi_startproc
 950              	.LVL74:
 951 0000 38B5     		push	{r3, r4, r5, lr}
 952              		.cfi_def_cfa_offset 16
 953              		.cfi_offset 3, -16
 954              		.cfi_offset 4, -12
 955              		.cfi_offset 5, -8
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 33


 956              		.cfi_offset 14, -4
 957 0002 041C     		mov	r4, r0
 958 0004 0D1C     		mov	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 959              		.loc 1 860 0
 960 0006 0328     		cmp	r0, #3
 961 0008 02D9     		bls	.L79
 962              		.loc 1 860 0 is_stmt 0 discriminator 1
 963 000a 0020     		mov	r0, #0
 964              	.LVL75:
 965 000c FFF7FEFF 		bl	CyHalt
 966              	.LVL76:
 967              	.L79:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 968              		.loc 1 871 0 is_stmt 1
 969 0010 6200     		lsl	r2, r4, #1
 970 0012 0A4B     		ldr	r3, .L80
 971 0014 D05A     		ldrh	r0, [r2, r3]
 972 0016 281A     		sub	r0, r5, r0
 973 0018 00B2     		sxth	r0, r0
 974              	.LVL77:
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 975              		.loc 1 873 0
 976 001a FFF7FEFF 		bl	__aeabi_i2f
 977              	.LVL78:
 978 001e 0849     		ldr	r1, .L80+4
 979 0020 FFF7FEFF 		bl	__aeabi_fmul
 980              	.LVL79:
 981 0024 051C     		add	r5, r0, #0
 982 0026 A400     		lsl	r4, r4, #2
 983              	.LVL80:
 984 0028 064B     		ldr	r3, .L80+8
 985 002a E058     		ldr	r0, [r4, r3]
 986 002c FFF7FEFF 		bl	__aeabi_i2f
 987              	.LVL81:
 988 0030 011C     		add	r1, r0, #0
 989 0032 281C     		add	r0, r5, #0
 990 0034 FFF7FEFF 		bl	__aeabi_fdiv
 991              	.LVL82:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 992              		.loc 1 876 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 34


 993              		@ sp needed
 994 0038 38BD     		pop	{r3, r4, r5, pc}
 995              	.L81:
 996 003a C046     		.align	2
 997              	.L80:
 998 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 999 0040 00002041 		.word	1092616192
 1000 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1001              		.cfi_endproc
 1002              	.LFE19:
 1003              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1004              		.comm	ADC_SAR_Seq_1_countsPer10Volt,16,4
 1005              		.comm	ADC_SAR_Seq_1_offset,8,4
 1006              		.global	ADC_SAR_Seq_1_initVar
 1007              		.section	.rodata
 1008              		.align	2
 1009              		.set	.LANCHOR0,. + 0
 1010              		.type	ADC_SAR_Seq_1_channelsConfig, %object
 1011              		.size	ADC_SAR_Seq_1_channelsConfig, 16
 1012              	ADC_SAR_Seq_1_channelsConfig:
 1013 0000 00000000 		.space	16
 1013      00000000 
 1013      00000000 
 1013      00000000 
 1014              		.type	ADC_SAR_Seq_1_InputsPlacement.4768, %object
 1015              		.size	ADC_SAR_Seq_1_InputsPlacement.4768, 4
 1016              	ADC_SAR_Seq_1_InputsPlacement.4768:
 1017 0010 00       		.byte	0
 1018 0011 01       		.byte	1
 1019 0012 02       		.byte	2
 1020 0013 03       		.byte	3
 1021              		.bss
 1022              		.set	.LANCHOR1,. + 0
 1023              		.type	ADC_SAR_Seq_1_initVar, %object
 1024              		.size	ADC_SAR_Seq_1_initVar, 1
 1025              	ADC_SAR_Seq_1_initVar:
 1026 0000 00       		.space	1
 1027              		.text
 1028              	.Letext0:
 1029              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1030              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1031              		.section	.debug_info,"",%progbits
 1032              	.Ldebug_info0:
 1033 0000 B4050000 		.4byte	0x5b4
 1034 0004 0400     		.2byte	0x4
 1035 0006 00000000 		.4byte	.Ldebug_abbrev0
 1036 000a 04       		.byte	0x4
 1037 000b 01       		.uleb128 0x1
 1038 000c CF020000 		.4byte	.LASF62
 1039 0010 01       		.byte	0x1
 1040 0011 74030000 		.4byte	.LASF63
 1041 0015 E1010000 		.4byte	.LASF64
 1042 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1043 001d 00000000 		.4byte	0
 1044 0021 00000000 		.4byte	.Ldebug_line0
 1045 0025 02       		.uleb128 0x2
 1046 0026 01       		.byte	0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 35


 1047 0027 06       		.byte	0x6
 1048 0028 F8000000 		.4byte	.LASF0
 1049 002c 02       		.uleb128 0x2
 1050 002d 01       		.byte	0x1
 1051 002e 08       		.byte	0x8
 1052 002f DB030000 		.4byte	.LASF1
 1053 0033 02       		.uleb128 0x2
 1054 0034 02       		.byte	0x2
 1055 0035 05       		.byte	0x5
 1056 0036 E9030000 		.4byte	.LASF2
 1057 003a 02       		.uleb128 0x2
 1058 003b 02       		.byte	0x2
 1059 003c 07       		.byte	0x7
 1060 003d 31020000 		.4byte	.LASF3
 1061 0041 02       		.uleb128 0x2
 1062 0042 04       		.byte	0x4
 1063 0043 05       		.byte	0x5
 1064 0044 43010000 		.4byte	.LASF4
 1065 0048 02       		.uleb128 0x2
 1066 0049 04       		.byte	0x4
 1067 004a 07       		.byte	0x7
 1068 004b BF010000 		.4byte	.LASF5
 1069 004f 02       		.uleb128 0x2
 1070 0050 08       		.byte	0x8
 1071 0051 05       		.byte	0x5
 1072 0052 EA000000 		.4byte	.LASF6
 1073 0056 02       		.uleb128 0x2
 1074 0057 08       		.byte	0x8
 1075 0058 07       		.byte	0x7
 1076 0059 86000000 		.4byte	.LASF7
 1077 005d 03       		.uleb128 0x3
 1078 005e 04       		.byte	0x4
 1079 005f 05       		.byte	0x5
 1080 0060 696E7400 		.ascii	"int\000"
 1081 0064 02       		.uleb128 0x2
 1082 0065 04       		.byte	0x4
 1083 0066 07       		.byte	0x7
 1084 0067 AB010000 		.4byte	.LASF8
 1085 006b 04       		.uleb128 0x4
 1086 006c 4C010000 		.4byte	.LASF9
 1087 0070 02       		.byte	0x2
 1088 0071 C2       		.byte	0xc2
 1089 0072 2C000000 		.4byte	0x2c
 1090 0076 04       		.uleb128 0x4
 1091 0077 15000000 		.4byte	.LASF10
 1092 007b 02       		.byte	0x2
 1093 007c C3       		.byte	0xc3
 1094 007d 3A000000 		.4byte	0x3a
 1095 0081 04       		.uleb128 0x4
 1096 0082 63010000 		.4byte	.LASF11
 1097 0086 02       		.byte	0x2
 1098 0087 C4       		.byte	0xc4
 1099 0088 48000000 		.4byte	0x48
 1100 008c 04       		.uleb128 0x4
 1101 008d AF040000 		.4byte	.LASF12
 1102 0091 02       		.byte	0x2
 1103 0092 C6       		.byte	0xc6
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 36


 1104 0093 33000000 		.4byte	0x33
 1105 0097 04       		.uleb128 0x4
 1106 0098 1F010000 		.4byte	.LASF13
 1107 009c 02       		.byte	0x2
 1108 009d C7       		.byte	0xc7
 1109 009e 41000000 		.4byte	0x41
 1110 00a2 04       		.uleb128 0x4
 1111 00a3 7D020000 		.4byte	.LASF14
 1112 00a7 02       		.byte	0x2
 1113 00a8 C8       		.byte	0xc8
 1114 00a9 AD000000 		.4byte	0xad
 1115 00ad 02       		.uleb128 0x2
 1116 00ae 04       		.byte	0x4
 1117 00af 04       		.byte	0x4
 1118 00b0 9B030000 		.4byte	.LASF15
 1119 00b4 02       		.uleb128 0x2
 1120 00b5 08       		.byte	0x8
 1121 00b6 04       		.byte	0x4
 1122 00b7 5C010000 		.4byte	.LASF16
 1123 00bb 04       		.uleb128 0x4
 1124 00bc 5D030000 		.4byte	.LASF17
 1125 00c0 02       		.byte	0x2
 1126 00c1 CD       		.byte	0xcd
 1127 00c2 4F000000 		.4byte	0x4f
 1128 00c6 02       		.uleb128 0x2
 1129 00c7 01       		.byte	0x1
 1130 00c8 08       		.byte	0x8
 1131 00c9 35040000 		.4byte	.LASF18
 1132 00cd 05       		.uleb128 0x5
 1133 00ce 77020000 		.4byte	.LASF19
 1134 00d2 02       		.byte	0x2
 1135 00d3 6E01     		.2byte	0x16e
 1136 00d5 D9000000 		.4byte	0xd9
 1137 00d9 06       		.uleb128 0x6
 1138 00da 81000000 		.4byte	0x81
 1139 00de 05       		.uleb128 0x5
 1140 00df 3A040000 		.4byte	.LASF20
 1141 00e3 02       		.byte	0x2
 1142 00e4 7E01     		.2byte	0x17e
 1143 00e6 EA000000 		.4byte	0xea
 1144 00ea 07       		.uleb128 0x7
 1145 00eb 04       		.byte	0x4
 1146 00ec F0000000 		.4byte	0xf0
 1147 00f0 08       		.uleb128 0x8
 1148 00f1 02       		.uleb128 0x2
 1149 00f2 04       		.byte	0x4
 1150 00f3 07       		.byte	0x7
 1151 00f4 85020000 		.4byte	.LASF21
 1152 00f8 09       		.uleb128 0x9
 1153 00f9 1C000000 		.4byte	.LASF26
 1154 00fd 01       		.byte	0x1
 1155 00fe 5E       		.byte	0x5e
 1156 00ff 00000000 		.4byte	.LFB3
 1157 0103 88010000 		.4byte	.LFE3-.LFB3
 1158 0107 01       		.uleb128 0x1
 1159 0108 9C       		.byte	0x9c
 1160 0109 73010000 		.4byte	0x173
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 37


 1161 010d 0A       		.uleb128 0xa
 1162 010e 2A040000 		.4byte	.LASF22
 1163 0112 01       		.byte	0x1
 1164 0113 60       		.byte	0x60
 1165 0114 81000000 		.4byte	0x81
 1166 0118 00000000 		.4byte	.LLST0
 1167 011c 0A       		.uleb128 0xa
 1168 011d D7010000 		.4byte	.LASF23
 1169 0121 01       		.byte	0x1
 1170 0122 61       		.byte	0x61
 1171 0123 81000000 		.4byte	0x81
 1172 0127 1F000000 		.4byte	.LLST1
 1173 012b 0A       		.uleb128 0xa
 1174 012c 37000000 		.4byte	.LASF24
 1175 0130 01       		.byte	0x1
 1176 0131 62       		.byte	0x62
 1177 0132 97000000 		.4byte	0x97
 1178 0136 2B010000 		.4byte	.LLST2
 1179 013a 0B       		.uleb128 0xb
 1180 013b B2000000 		.4byte	.LASF25
 1181 013f 01       		.byte	0x1
 1182 0140 65       		.byte	0x65
 1183 0141 83010000 		.4byte	0x183
 1184 0145 05       		.uleb128 0x5
 1185 0146 03       		.byte	0x3
 1186 0147 10000000 		.4byte	ADC_SAR_Seq_1_InputsPlacement.4768
 1187 014b 0C       		.uleb128 0xc
 1188 014c 0A000000 		.4byte	.LVL0
 1189 0150 69050000 		.4byte	0x569
 1190 0154 63010000 		.4byte	0x163
 1191 0158 0D       		.uleb128 0xd
 1192 0159 01       		.uleb128 0x1
 1193 015a 51       		.byte	0x51
 1194 015b 01       		.uleb128 0x1
 1195 015c 33       		.byte	0x33
 1196 015d 0D       		.uleb128 0xd
 1197 015e 01       		.uleb128 0x1
 1198 015f 50       		.byte	0x50
 1199 0160 01       		.uleb128 0x1
 1200 0161 3F       		.byte	0x3f
 1201 0162 00       		.byte	0
 1202 0163 0E       		.uleb128 0xe
 1203 0164 12000000 		.4byte	.LVL1
 1204 0168 7F050000 		.4byte	0x57f
 1205 016c 0D       		.uleb128 0xd
 1206 016d 01       		.uleb128 0x1
 1207 016e 50       		.byte	0x50
 1208 016f 01       		.uleb128 0x1
 1209 0170 3F       		.byte	0x3f
 1210 0171 00       		.byte	0
 1211 0172 00       		.byte	0
 1212 0173 0F       		.uleb128 0xf
 1213 0174 6B000000 		.4byte	0x6b
 1214 0178 83010000 		.4byte	0x183
 1215 017c 10       		.uleb128 0x10
 1216 017d F1000000 		.4byte	0xf1
 1217 0181 03       		.byte	0x3
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 38


 1218 0182 00       		.byte	0
 1219 0183 11       		.uleb128 0x11
 1220 0184 73010000 		.4byte	0x173
 1221 0188 12       		.uleb128 0x12
 1222 0189 9D000000 		.4byte	.LASF27
 1223 018d 01       		.byte	0x1
 1224 018e 4A01     		.2byte	0x14a
 1225 0190 00000000 		.4byte	.LFB4
 1226 0194 30000000 		.4byte	.LFE4-.LFB4
 1227 0198 01       		.uleb128 0x1
 1228 0199 9C       		.byte	0x9c
 1229 019a AE010000 		.4byte	0x1ae
 1230 019e 0E       		.uleb128 0xe
 1231 019f 24000000 		.4byte	.LVL21
 1232 01a3 99050000 		.4byte	0x599
 1233 01a7 0D       		.uleb128 0xd
 1234 01a8 01       		.uleb128 0x1
 1235 01a9 50       		.byte	0x50
 1236 01aa 01       		.uleb128 0x1
 1237 01ab 3A       		.byte	0x3a
 1238 01ac 00       		.byte	0
 1239 01ad 00       		.byte	0
 1240 01ae 13       		.uleb128 0x13
 1241 01af 72000000 		.4byte	.LASF28
 1242 01b3 01       		.byte	0x1
 1243 01b4 3F       		.byte	0x3f
 1244 01b5 00000000 		.4byte	.LFB2
 1245 01b9 20000000 		.4byte	.LFE2-.LFB2
 1246 01bd 01       		.uleb128 0x1
 1247 01be 9C       		.byte	0x9c
 1248 01bf D6010000 		.4byte	0x1d6
 1249 01c3 14       		.uleb128 0x14
 1250 01c4 0E000000 		.4byte	.LVL22
 1251 01c8 F8000000 		.4byte	0xf8
 1252 01cc 14       		.uleb128 0x14
 1253 01cd 18000000 		.4byte	.LVL23
 1254 01d1 88010000 		.4byte	0x188
 1255 01d5 00       		.byte	0
 1256 01d6 15       		.uleb128 0x15
 1257 01d7 B7030000 		.4byte	.LASF29
 1258 01db 01       		.byte	0x1
 1259 01dc 6D01     		.2byte	0x16d
 1260 01de 00000000 		.4byte	.LFB5
 1261 01e2 10000000 		.4byte	.LFE5-.LFB5
 1262 01e6 01       		.uleb128 0x1
 1263 01e7 9C       		.byte	0x9c
 1264 01e8 15       		.uleb128 0x15
 1265 01e9 3E000000 		.4byte	.LASF30
 1266 01ed 01       		.byte	0x1
 1267 01ee 8701     		.2byte	0x187
 1268 01f0 00000000 		.4byte	.LFB6
 1269 01f4 14000000 		.4byte	.LFE6-.LFB6
 1270 01f8 01       		.uleb128 0x1
 1271 01f9 9C       		.byte	0x9c
 1272 01fa 15       		.uleb128 0x15
 1273 01fb B5020000 		.4byte	.LASF31
 1274 01ff 01       		.byte	0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 39


 1275 0200 A001     		.2byte	0x1a0
 1276 0202 00000000 		.4byte	.LFB7
 1277 0206 14000000 		.4byte	.LFE7-.LFB7
 1278 020a 01       		.uleb128 0x1
 1279 020b 9C       		.byte	0x9c
 1280 020c 16       		.uleb128 0x16
 1281 020d 97020000 		.4byte	.LASF33
 1282 0211 01       		.byte	0x1
 1283 0212 C201     		.2byte	0x1c2
 1284 0214 81000000 		.4byte	0x81
 1285 0218 00000000 		.4byte	.LFB8
 1286 021c 28000000 		.4byte	.LFE8-.LFB8
 1287 0220 01       		.uleb128 0x1
 1288 0221 9C       		.byte	0x9c
 1289 0222 47020000 		.4byte	0x247
 1290 0226 17       		.uleb128 0x17
 1291 0227 8D010000 		.4byte	.LASF35
 1292 022b 01       		.byte	0x1
 1293 022c C201     		.2byte	0x1c2
 1294 022e 81000000 		.4byte	0x81
 1295 0232 3E010000 		.4byte	.LLST3
 1296 0236 18       		.uleb128 0x18
 1297 0237 90040000 		.4byte	.LASF32
 1298 023b 01       		.byte	0x1
 1299 023c C401     		.2byte	0x1c4
 1300 023e 81000000 		.4byte	0x81
 1301 0242 83010000 		.4byte	.LLST4
 1302 0246 00       		.byte	0
 1303 0247 16       		.uleb128 0x16
 1304 0248 D0000000 		.4byte	.LASF34
 1305 024c 01       		.byte	0x1
 1306 024d F801     		.2byte	0x1f8
 1307 024f 8C000000 		.4byte	0x8c
 1308 0253 00000000 		.4byte	.LFB9
 1309 0257 2C000000 		.4byte	.LFE9-.LFB9
 1310 025b 01       		.uleb128 0x1
 1311 025c 9C       		.byte	0x9c
 1312 025d 91020000 		.4byte	0x291
 1313 0261 17       		.uleb128 0x17
 1314 0262 30040000 		.4byte	.LASF36
 1315 0266 01       		.byte	0x1
 1316 0267 F801     		.2byte	0x1f8
 1317 0269 81000000 		.4byte	0x81
 1318 026d B9010000 		.4byte	.LLST5
 1319 0271 18       		.uleb128 0x18
 1320 0272 D0040000 		.4byte	.LASF37
 1321 0276 01       		.byte	0x1
 1322 0277 FA01     		.2byte	0x1fa
 1323 0279 81000000 		.4byte	0x81
 1324 027d FE010000 		.4byte	.LLST6
 1325 0281 0E       		.uleb128 0xe
 1326 0282 0E000000 		.4byte	.LVL33
 1327 0286 AA050000 		.4byte	0x5aa
 1328 028a 0D       		.uleb128 0xd
 1329 028b 01       		.uleb128 0x1
 1330 028c 50       		.byte	0x50
 1331 028d 01       		.uleb128 0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 40


 1332 028e 30       		.byte	0x30
 1333 028f 00       		.byte	0
 1334 0290 00       		.byte	0
 1335 0291 12       		.uleb128 0x12
 1336 0292 10040000 		.4byte	.LASF38
 1337 0296 01       		.byte	0x1
 1338 0297 2502     		.2byte	0x225
 1339 0299 00000000 		.4byte	.LFB10
 1340 029d 10000000 		.4byte	.LFE10-.LFB10
 1341 02a1 01       		.uleb128 0x1
 1342 02a2 9C       		.byte	0x9c
 1343 02a3 B8020000 		.4byte	0x2b8
 1344 02a7 17       		.uleb128 0x17
 1345 02a8 6A010000 		.4byte	.LASF39
 1346 02ac 01       		.byte	0x1
 1347 02ad 2502     		.2byte	0x225
 1348 02af 81000000 		.4byte	0x81
 1349 02b3 1C020000 		.4byte	.LLST7
 1350 02b7 00       		.byte	0
 1351 02b8 12       		.uleb128 0x12
 1352 02b9 47040000 		.4byte	.LASF40
 1353 02bd 01       		.byte	0x1
 1354 02be 5102     		.2byte	0x251
 1355 02c0 00000000 		.4byte	.LFB11
 1356 02c4 1C000000 		.4byte	.LFE11-.LFB11
 1357 02c8 01       		.uleb128 0x1
 1358 02c9 9C       		.byte	0x9c
 1359 02ca DF020000 		.4byte	0x2df
 1360 02ce 17       		.uleb128 0x17
 1361 02cf 8E020000 		.4byte	.LASF41
 1362 02d3 01       		.byte	0x1
 1363 02d4 5102     		.2byte	0x251
 1364 02d6 81000000 		.4byte	0x81
 1365 02da 3D020000 		.4byte	.LLST8
 1366 02de 00       		.byte	0
 1367 02df 12       		.uleb128 0x12
 1368 02e0 04010000 		.4byte	.LASF42
 1369 02e4 01       		.byte	0x1
 1370 02e5 6602     		.2byte	0x266
 1371 02e7 00000000 		.4byte	.LFB12
 1372 02eb 18000000 		.4byte	.LFE12-.LFB12
 1373 02ef 01       		.uleb128 0x1
 1374 02f0 9C       		.byte	0x9c
 1375 02f1 06030000 		.4byte	0x306
 1376 02f5 17       		.uleb128 0x17
 1377 02f6 CA030000 		.4byte	.LASF43
 1378 02fa 01       		.byte	0x1
 1379 02fb 6602     		.2byte	0x266
 1380 02fd 81000000 		.4byte	0x81
 1381 0301 5E020000 		.4byte	.LLST9
 1382 0305 00       		.byte	0
 1383 0306 12       		.uleb128 0x12
 1384 0307 B5040000 		.4byte	.LASF44
 1385 030b 01       		.byte	0x1
 1386 030c 7E02     		.2byte	0x27e
 1387 030e 00000000 		.4byte	.LFB13
 1388 0312 10000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 41


 1389 0316 01       		.uleb128 0x1
 1390 0317 9C       		.byte	0x9c
 1391 0318 2D030000 		.4byte	0x32d
 1392 031c 17       		.uleb128 0x17
 1393 031d 6A010000 		.4byte	.LASF39
 1394 0321 01       		.byte	0x1
 1395 0322 7E02     		.2byte	0x27e
 1396 0324 81000000 		.4byte	0x81
 1397 0328 7F020000 		.4byte	.LLST10
 1398 032c 00       		.byte	0
 1399 032d 12       		.uleb128 0x12
 1400 032e 59000000 		.4byte	.LASF45
 1401 0332 01       		.byte	0x1
 1402 0333 9502     		.2byte	0x295
 1403 0335 00000000 		.4byte	.LFB14
 1404 0339 10000000 		.4byte	.LFE14-.LFB14
 1405 033d 01       		.uleb128 0x1
 1406 033e 9C       		.byte	0x9c
 1407 033f 54030000 		.4byte	0x354
 1408 0343 17       		.uleb128 0x17
 1409 0344 6A010000 		.4byte	.LASF39
 1410 0348 01       		.byte	0x1
 1411 0349 9502     		.2byte	0x295
 1412 034b 81000000 		.4byte	0x81
 1413 034f A0020000 		.4byte	.LLST11
 1414 0353 00       		.byte	0
 1415 0354 12       		.uleb128 0x12
 1416 0355 97040000 		.4byte	.LASF46
 1417 0359 01       		.byte	0x1
 1418 035a B102     		.2byte	0x2b1
 1419 035c 00000000 		.4byte	.LFB15
 1420 0360 1C000000 		.4byte	.LFE15-.LFB15
 1421 0364 01       		.uleb128 0x1
 1422 0365 9C       		.byte	0x9c
 1423 0366 9A030000 		.4byte	0x39a
 1424 036a 17       		.uleb128 0x17
 1425 036b 30040000 		.4byte	.LASF36
 1426 036f 01       		.byte	0x1
 1427 0370 B102     		.2byte	0x2b1
 1428 0372 81000000 		.4byte	0x81
 1429 0376 C1020000 		.4byte	.LLST12
 1430 037a 17       		.uleb128 0x17
 1431 037b 61040000 		.4byte	.LASF47
 1432 037f 01       		.byte	0x1
 1433 0380 B102     		.2byte	0x2b1
 1434 0382 8C000000 		.4byte	0x8c
 1435 0386 ED020000 		.4byte	.LLST13
 1436 038a 0E       		.uleb128 0xe
 1437 038b 10000000 		.4byte	.LVL51
 1438 038f AA050000 		.4byte	0x5aa
 1439 0393 0D       		.uleb128 0xd
 1440 0394 01       		.uleb128 0x1
 1441 0395 50       		.byte	0x50
 1442 0396 01       		.uleb128 0x1
 1443 0397 30       		.byte	0x30
 1444 0398 00       		.byte	0
 1445 0399 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 42


 1446 039a 12       		.uleb128 0x12
 1447 039b A1030000 		.4byte	.LASF48
 1448 039f 01       		.byte	0x1
 1449 03a0 D302     		.2byte	0x2d3
 1450 03a2 00000000 		.4byte	.LFB16
 1451 03a6 1C000000 		.4byte	.LFE16-.LFB16
 1452 03aa 01       		.uleb128 0x1
 1453 03ab 9C       		.byte	0x9c
 1454 03ac E0030000 		.4byte	0x3e0
 1455 03b0 17       		.uleb128 0x17
 1456 03b1 30040000 		.4byte	.LASF36
 1457 03b5 01       		.byte	0x1
 1458 03b6 D302     		.2byte	0x2d3
 1459 03b8 81000000 		.4byte	0x81
 1460 03bc 0E030000 		.4byte	.LLST14
 1461 03c0 17       		.uleb128 0x17
 1462 03c1 2F000000 		.4byte	.LASF49
 1463 03c5 01       		.byte	0x1
 1464 03c6 D302     		.2byte	0x2d3
 1465 03c8 97000000 		.4byte	0x97
 1466 03cc 3A030000 		.4byte	.LLST15
 1467 03d0 0E       		.uleb128 0xe
 1468 03d1 10000000 		.4byte	.LVL55
 1469 03d5 AA050000 		.4byte	0x5aa
 1470 03d9 0D       		.uleb128 0xd
 1471 03da 01       		.uleb128 0x1
 1472 03db 50       		.byte	0x50
 1473 03dc 01       		.uleb128 0x1
 1474 03dd 30       		.byte	0x30
 1475 03de 00       		.byte	0
 1476 03df 00       		.byte	0
 1477 03e0 19       		.uleb128 0x19
 1478 03e1 6F010000 		.4byte	.LASF50
 1479 03e5 01       		.byte	0x1
 1480 03e6 F402     		.2byte	0x2f4
 1481 03e8 8C000000 		.4byte	0x8c
 1482 03ec 00000000 		.4byte	.LFB17
 1483 03f0 5C000000 		.4byte	.LFE17-.LFB17
 1484 03f4 01       		.uleb128 0x1
 1485 03f5 9C       		.byte	0x9c
 1486 03f6 38040000 		.4byte	0x438
 1487 03fa 17       		.uleb128 0x17
 1488 03fb 30040000 		.4byte	.LASF36
 1489 03ff 01       		.byte	0x1
 1490 0400 F402     		.2byte	0x2f4
 1491 0402 81000000 		.4byte	0x81
 1492 0406 6A030000 		.4byte	.LLST16
 1493 040a 17       		.uleb128 0x17
 1494 040b 68040000 		.4byte	.LASF51
 1495 040f 01       		.byte	0x1
 1496 0410 F402     		.2byte	0x2f4
 1497 0412 8C000000 		.4byte	0x8c
 1498 0416 96030000 		.4byte	.LLST17
 1499 041a 1A       		.uleb128 0x1a
 1500 041b 70020000 		.4byte	.LASF52
 1501 041f 01       		.byte	0x1
 1502 0420 F602     		.2byte	0x2f6
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 43


 1503 0422 8C000000 		.4byte	0x8c
 1504 0426 01       		.uleb128 0x1
 1505 0427 50       		.byte	0x50
 1506 0428 0E       		.uleb128 0xe
 1507 0429 10000000 		.4byte	.LVL60
 1508 042d AA050000 		.4byte	0x5aa
 1509 0431 0D       		.uleb128 0xd
 1510 0432 01       		.uleb128 0x1
 1511 0433 50       		.byte	0x50
 1512 0434 01       		.uleb128 0x1
 1513 0435 30       		.byte	0x30
 1514 0436 00       		.byte	0
 1515 0437 00       		.byte	0
 1516 0438 19       		.uleb128 0x19
 1517 0439 25010000 		.4byte	.LASF53
 1518 043d 01       		.byte	0x1
 1519 043e 2A03     		.2byte	0x32a
 1520 0440 97000000 		.4byte	0x97
 1521 0444 00000000 		.4byte	.LFB18
 1522 0448 40000000 		.4byte	.LFE18-.LFB18
 1523 044c 01       		.uleb128 0x1
 1524 044d 9C       		.byte	0x9c
 1525 044e 8E040000 		.4byte	0x48e
 1526 0452 17       		.uleb128 0x17
 1527 0453 30040000 		.4byte	.LASF36
 1528 0457 01       		.byte	0x1
 1529 0458 2A03     		.2byte	0x32a
 1530 045a 81000000 		.4byte	0x81
 1531 045e CD030000 		.4byte	.LLST18
 1532 0462 17       		.uleb128 0x17
 1533 0463 68040000 		.4byte	.LASF51
 1534 0467 01       		.byte	0x1
 1535 0468 2A03     		.2byte	0x32a
 1536 046a 8C000000 		.4byte	0x8c
 1537 046e F9030000 		.4byte	.LLST19
 1538 0472 1B       		.uleb128 0x1b
 1539 0473 B8010000 		.4byte	.LASF65
 1540 0477 01       		.byte	0x1
 1541 0478 2C03     		.2byte	0x32c
 1542 047a BB000000 		.4byte	0xbb
 1543 047e 0E       		.uleb128 0xe
 1544 047f 10000000 		.4byte	.LVL69
 1545 0483 AA050000 		.4byte	0x5aa
 1546 0487 0D       		.uleb128 0xd
 1547 0488 01       		.uleb128 0x1
 1548 0489 50       		.byte	0x50
 1549 048a 01       		.uleb128 0x1
 1550 048b 30       		.byte	0x30
 1551 048c 00       		.byte	0
 1552 048d 00       		.byte	0
 1553 048e 19       		.uleb128 0x19
 1554 048f F3030000 		.4byte	.LASF54
 1555 0493 01       		.byte	0x1
 1556 0494 5703     		.2byte	0x357
 1557 0496 A2000000 		.4byte	0xa2
 1558 049a 00000000 		.4byte	.LFB19
 1559 049e 48000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 44


 1560 04a2 01       		.uleb128 0x1
 1561 04a3 9C       		.byte	0x9c
 1562 04a4 E6040000 		.4byte	0x4e6
 1563 04a8 17       		.uleb128 0x17
 1564 04a9 30040000 		.4byte	.LASF36
 1565 04ad 01       		.byte	0x1
 1566 04ae 5703     		.2byte	0x357
 1567 04b0 81000000 		.4byte	0x81
 1568 04b4 25040000 		.4byte	.LLST20
 1569 04b8 17       		.uleb128 0x17
 1570 04b9 68040000 		.4byte	.LASF51
 1571 04bd 01       		.byte	0x1
 1572 04be 5703     		.2byte	0x357
 1573 04c0 8C000000 		.4byte	0x8c
 1574 04c4 51040000 		.4byte	.LLST21
 1575 04c8 1A       		.uleb128 0x1a
 1576 04c9 D1010000 		.4byte	.LASF55
 1577 04cd 01       		.byte	0x1
 1578 04ce 5903     		.2byte	0x359
 1579 04d0 A2000000 		.4byte	0xa2
 1580 04d4 01       		.uleb128 0x1
 1581 04d5 50       		.byte	0x50
 1582 04d6 0E       		.uleb128 0xe
 1583 04d7 10000000 		.4byte	.LVL76
 1584 04db AA050000 		.4byte	0x5aa
 1585 04df 0D       		.uleb128 0xd
 1586 04e0 01       		.uleb128 0x1
 1587 04e1 50       		.byte	0x50
 1588 04e2 01       		.uleb128 0x1
 1589 04e3 30       		.byte	0x30
 1590 04e4 00       		.byte	0
 1591 04e5 00       		.byte	0
 1592 04e6 0F       		.uleb128 0xf
 1593 04e7 81000000 		.4byte	0x81
 1594 04eb F6040000 		.4byte	0x4f6
 1595 04ef 10       		.uleb128 0x10
 1596 04f0 F1000000 		.4byte	0xf1
 1597 04f4 03       		.byte	0x3
 1598 04f5 00       		.byte	0
 1599 04f6 0B       		.uleb128 0xb
 1600 04f7 53020000 		.4byte	.LASF56
 1601 04fb 01       		.byte	0x1
 1602 04fc 21       		.byte	0x21
 1603 04fd 07050000 		.4byte	0x507
 1604 0501 05       		.uleb128 0x5
 1605 0502 03       		.byte	0x3
 1606 0503 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1607 0507 11       		.uleb128 0x11
 1608 0508 E6040000 		.4byte	0x4e6
 1609 050c 1C       		.uleb128 0x1c
 1610 050d 95010000 		.4byte	.LASF57
 1611 0511 01       		.byte	0x1
 1612 0512 18       		.byte	0x18
 1613 0513 6B000000 		.4byte	0x6b
 1614 0517 05       		.uleb128 0x5
 1615 0518 03       		.byte	0x3
 1616 0519 00000000 		.4byte	ADC_SAR_Seq_1_initVar
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 45


 1617 051d 0F       		.uleb128 0xf
 1618 051e 8C000000 		.4byte	0x8c
 1619 0522 2D050000 		.4byte	0x52d
 1620 0526 10       		.uleb128 0x10
 1621 0527 F1000000 		.4byte	0xf1
 1622 052b 03       		.byte	0x3
 1623 052c 00       		.byte	0
 1624 052d 1C       		.uleb128 0x1c
 1625 052e 00000000 		.4byte	.LASF58
 1626 0532 01       		.byte	0x1
 1627 0533 19       		.byte	0x19
 1628 0534 3E050000 		.4byte	0x53e
 1629 0538 05       		.uleb128 0x5
 1630 0539 03       		.byte	0x3
 1631 053a 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1632 053e 06       		.uleb128 0x6
 1633 053f 1D050000 		.4byte	0x51d
 1634 0543 0F       		.uleb128 0xf
 1635 0544 97000000 		.4byte	0x97
 1636 0548 53050000 		.4byte	0x553
 1637 054c 10       		.uleb128 0x10
 1638 054d F1000000 		.4byte	0xf1
 1639 0551 03       		.byte	0x3
 1640 0552 00       		.byte	0
 1641 0553 1C       		.uleb128 0x1c
 1642 0554 72040000 		.4byte	.LASF59
 1643 0558 01       		.byte	0x1
 1644 0559 1A       		.byte	0x1a
 1645 055a 64050000 		.4byte	0x564
 1646 055e 05       		.uleb128 0x5
 1647 055f 03       		.byte	0x3
 1648 0560 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1649 0564 06       		.uleb128 0x6
 1650 0565 43050000 		.4byte	0x543
 1651 0569 1D       		.uleb128 0x1d
 1652 056a 63030000 		.4byte	.LASF60
 1653 056e 03       		.byte	0x3
 1654 056f 49       		.byte	0x49
 1655 0570 7F050000 		.4byte	0x57f
 1656 0574 1E       		.uleb128 0x1e
 1657 0575 6B000000 		.4byte	0x6b
 1658 0579 1E       		.uleb128 0x1e
 1659 057a 6B000000 		.4byte	0x6b
 1660 057e 00       		.byte	0
 1661 057f 1F       		.uleb128 0x1f
 1662 0580 44020000 		.4byte	.LASF66
 1663 0584 03       		.byte	0x3
 1664 0585 46       		.byte	0x46
 1665 0586 DE000000 		.4byte	0xde
 1666 058a 99050000 		.4byte	0x599
 1667 058e 1E       		.uleb128 0x1e
 1668 058f 6B000000 		.4byte	0x6b
 1669 0593 1E       		.uleb128 0x1e
 1670 0594 DE000000 		.4byte	0xde
 1671 0598 00       		.byte	0
 1672 0599 1D       		.uleb128 0x1d
 1673 059a 52010000 		.4byte	.LASF61
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 46


 1674 059e 03       		.byte	0x3
 1675 059f 58       		.byte	0x58
 1676 05a0 AA050000 		.4byte	0x5aa
 1677 05a4 1E       		.uleb128 0x1e
 1678 05a5 76000000 		.4byte	0x76
 1679 05a9 00       		.byte	0
 1680 05aa 20       		.uleb128 0x20
 1681 05ab D4030000 		.4byte	.LASF67
 1682 05af 03       		.byte	0x3
 1683 05b0 60       		.byte	0x60
 1684 05b1 1E       		.uleb128 0x1e
 1685 05b2 6B000000 		.4byte	0x6b
 1686 05b6 00       		.byte	0
 1687 05b7 00       		.byte	0
 1688              		.section	.debug_abbrev,"",%progbits
 1689              	.Ldebug_abbrev0:
 1690 0000 01       		.uleb128 0x1
 1691 0001 11       		.uleb128 0x11
 1692 0002 01       		.byte	0x1
 1693 0003 25       		.uleb128 0x25
 1694 0004 0E       		.uleb128 0xe
 1695 0005 13       		.uleb128 0x13
 1696 0006 0B       		.uleb128 0xb
 1697 0007 03       		.uleb128 0x3
 1698 0008 0E       		.uleb128 0xe
 1699 0009 1B       		.uleb128 0x1b
 1700 000a 0E       		.uleb128 0xe
 1701 000b 55       		.uleb128 0x55
 1702 000c 17       		.uleb128 0x17
 1703 000d 11       		.uleb128 0x11
 1704 000e 01       		.uleb128 0x1
 1705 000f 10       		.uleb128 0x10
 1706 0010 17       		.uleb128 0x17
 1707 0011 00       		.byte	0
 1708 0012 00       		.byte	0
 1709 0013 02       		.uleb128 0x2
 1710 0014 24       		.uleb128 0x24
 1711 0015 00       		.byte	0
 1712 0016 0B       		.uleb128 0xb
 1713 0017 0B       		.uleb128 0xb
 1714 0018 3E       		.uleb128 0x3e
 1715 0019 0B       		.uleb128 0xb
 1716 001a 03       		.uleb128 0x3
 1717 001b 0E       		.uleb128 0xe
 1718 001c 00       		.byte	0
 1719 001d 00       		.byte	0
 1720 001e 03       		.uleb128 0x3
 1721 001f 24       		.uleb128 0x24
 1722 0020 00       		.byte	0
 1723 0021 0B       		.uleb128 0xb
 1724 0022 0B       		.uleb128 0xb
 1725 0023 3E       		.uleb128 0x3e
 1726 0024 0B       		.uleb128 0xb
 1727 0025 03       		.uleb128 0x3
 1728 0026 08       		.uleb128 0x8
 1729 0027 00       		.byte	0
 1730 0028 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 47


 1731 0029 04       		.uleb128 0x4
 1732 002a 16       		.uleb128 0x16
 1733 002b 00       		.byte	0
 1734 002c 03       		.uleb128 0x3
 1735 002d 0E       		.uleb128 0xe
 1736 002e 3A       		.uleb128 0x3a
 1737 002f 0B       		.uleb128 0xb
 1738 0030 3B       		.uleb128 0x3b
 1739 0031 0B       		.uleb128 0xb
 1740 0032 49       		.uleb128 0x49
 1741 0033 13       		.uleb128 0x13
 1742 0034 00       		.byte	0
 1743 0035 00       		.byte	0
 1744 0036 05       		.uleb128 0x5
 1745 0037 16       		.uleb128 0x16
 1746 0038 00       		.byte	0
 1747 0039 03       		.uleb128 0x3
 1748 003a 0E       		.uleb128 0xe
 1749 003b 3A       		.uleb128 0x3a
 1750 003c 0B       		.uleb128 0xb
 1751 003d 3B       		.uleb128 0x3b
 1752 003e 05       		.uleb128 0x5
 1753 003f 49       		.uleb128 0x49
 1754 0040 13       		.uleb128 0x13
 1755 0041 00       		.byte	0
 1756 0042 00       		.byte	0
 1757 0043 06       		.uleb128 0x6
 1758 0044 35       		.uleb128 0x35
 1759 0045 00       		.byte	0
 1760 0046 49       		.uleb128 0x49
 1761 0047 13       		.uleb128 0x13
 1762 0048 00       		.byte	0
 1763 0049 00       		.byte	0
 1764 004a 07       		.uleb128 0x7
 1765 004b 0F       		.uleb128 0xf
 1766 004c 00       		.byte	0
 1767 004d 0B       		.uleb128 0xb
 1768 004e 0B       		.uleb128 0xb
 1769 004f 49       		.uleb128 0x49
 1770 0050 13       		.uleb128 0x13
 1771 0051 00       		.byte	0
 1772 0052 00       		.byte	0
 1773 0053 08       		.uleb128 0x8
 1774 0054 15       		.uleb128 0x15
 1775 0055 00       		.byte	0
 1776 0056 27       		.uleb128 0x27
 1777 0057 19       		.uleb128 0x19
 1778 0058 00       		.byte	0
 1779 0059 00       		.byte	0
 1780 005a 09       		.uleb128 0x9
 1781 005b 2E       		.uleb128 0x2e
 1782 005c 01       		.byte	0x1
 1783 005d 3F       		.uleb128 0x3f
 1784 005e 19       		.uleb128 0x19
 1785 005f 03       		.uleb128 0x3
 1786 0060 0E       		.uleb128 0xe
 1787 0061 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 48


 1788 0062 0B       		.uleb128 0xb
 1789 0063 3B       		.uleb128 0x3b
 1790 0064 0B       		.uleb128 0xb
 1791 0065 27       		.uleb128 0x27
 1792 0066 19       		.uleb128 0x19
 1793 0067 11       		.uleb128 0x11
 1794 0068 01       		.uleb128 0x1
 1795 0069 12       		.uleb128 0x12
 1796 006a 06       		.uleb128 0x6
 1797 006b 40       		.uleb128 0x40
 1798 006c 18       		.uleb128 0x18
 1799 006d 9642     		.uleb128 0x2116
 1800 006f 19       		.uleb128 0x19
 1801 0070 01       		.uleb128 0x1
 1802 0071 13       		.uleb128 0x13
 1803 0072 00       		.byte	0
 1804 0073 00       		.byte	0
 1805 0074 0A       		.uleb128 0xa
 1806 0075 34       		.uleb128 0x34
 1807 0076 00       		.byte	0
 1808 0077 03       		.uleb128 0x3
 1809 0078 0E       		.uleb128 0xe
 1810 0079 3A       		.uleb128 0x3a
 1811 007a 0B       		.uleb128 0xb
 1812 007b 3B       		.uleb128 0x3b
 1813 007c 0B       		.uleb128 0xb
 1814 007d 49       		.uleb128 0x49
 1815 007e 13       		.uleb128 0x13
 1816 007f 02       		.uleb128 0x2
 1817 0080 17       		.uleb128 0x17
 1818 0081 00       		.byte	0
 1819 0082 00       		.byte	0
 1820 0083 0B       		.uleb128 0xb
 1821 0084 34       		.uleb128 0x34
 1822 0085 00       		.byte	0
 1823 0086 03       		.uleb128 0x3
 1824 0087 0E       		.uleb128 0xe
 1825 0088 3A       		.uleb128 0x3a
 1826 0089 0B       		.uleb128 0xb
 1827 008a 3B       		.uleb128 0x3b
 1828 008b 0B       		.uleb128 0xb
 1829 008c 49       		.uleb128 0x49
 1830 008d 13       		.uleb128 0x13
 1831 008e 02       		.uleb128 0x2
 1832 008f 18       		.uleb128 0x18
 1833 0090 00       		.byte	0
 1834 0091 00       		.byte	0
 1835 0092 0C       		.uleb128 0xc
 1836 0093 898201   		.uleb128 0x4109
 1837 0096 01       		.byte	0x1
 1838 0097 11       		.uleb128 0x11
 1839 0098 01       		.uleb128 0x1
 1840 0099 31       		.uleb128 0x31
 1841 009a 13       		.uleb128 0x13
 1842 009b 01       		.uleb128 0x1
 1843 009c 13       		.uleb128 0x13
 1844 009d 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 49


 1845 009e 00       		.byte	0
 1846 009f 0D       		.uleb128 0xd
 1847 00a0 8A8201   		.uleb128 0x410a
 1848 00a3 00       		.byte	0
 1849 00a4 02       		.uleb128 0x2
 1850 00a5 18       		.uleb128 0x18
 1851 00a6 9142     		.uleb128 0x2111
 1852 00a8 18       		.uleb128 0x18
 1853 00a9 00       		.byte	0
 1854 00aa 00       		.byte	0
 1855 00ab 0E       		.uleb128 0xe
 1856 00ac 898201   		.uleb128 0x4109
 1857 00af 01       		.byte	0x1
 1858 00b0 11       		.uleb128 0x11
 1859 00b1 01       		.uleb128 0x1
 1860 00b2 31       		.uleb128 0x31
 1861 00b3 13       		.uleb128 0x13
 1862 00b4 00       		.byte	0
 1863 00b5 00       		.byte	0
 1864 00b6 0F       		.uleb128 0xf
 1865 00b7 01       		.uleb128 0x1
 1866 00b8 01       		.byte	0x1
 1867 00b9 49       		.uleb128 0x49
 1868 00ba 13       		.uleb128 0x13
 1869 00bb 01       		.uleb128 0x1
 1870 00bc 13       		.uleb128 0x13
 1871 00bd 00       		.byte	0
 1872 00be 00       		.byte	0
 1873 00bf 10       		.uleb128 0x10
 1874 00c0 21       		.uleb128 0x21
 1875 00c1 00       		.byte	0
 1876 00c2 49       		.uleb128 0x49
 1877 00c3 13       		.uleb128 0x13
 1878 00c4 2F       		.uleb128 0x2f
 1879 00c5 0B       		.uleb128 0xb
 1880 00c6 00       		.byte	0
 1881 00c7 00       		.byte	0
 1882 00c8 11       		.uleb128 0x11
 1883 00c9 26       		.uleb128 0x26
 1884 00ca 00       		.byte	0
 1885 00cb 49       		.uleb128 0x49
 1886 00cc 13       		.uleb128 0x13
 1887 00cd 00       		.byte	0
 1888 00ce 00       		.byte	0
 1889 00cf 12       		.uleb128 0x12
 1890 00d0 2E       		.uleb128 0x2e
 1891 00d1 01       		.byte	0x1
 1892 00d2 3F       		.uleb128 0x3f
 1893 00d3 19       		.uleb128 0x19
 1894 00d4 03       		.uleb128 0x3
 1895 00d5 0E       		.uleb128 0xe
 1896 00d6 3A       		.uleb128 0x3a
 1897 00d7 0B       		.uleb128 0xb
 1898 00d8 3B       		.uleb128 0x3b
 1899 00d9 05       		.uleb128 0x5
 1900 00da 27       		.uleb128 0x27
 1901 00db 19       		.uleb128 0x19
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 50


 1902 00dc 11       		.uleb128 0x11
 1903 00dd 01       		.uleb128 0x1
 1904 00de 12       		.uleb128 0x12
 1905 00df 06       		.uleb128 0x6
 1906 00e0 40       		.uleb128 0x40
 1907 00e1 18       		.uleb128 0x18
 1908 00e2 9742     		.uleb128 0x2117
 1909 00e4 19       		.uleb128 0x19
 1910 00e5 01       		.uleb128 0x1
 1911 00e6 13       		.uleb128 0x13
 1912 00e7 00       		.byte	0
 1913 00e8 00       		.byte	0
 1914 00e9 13       		.uleb128 0x13
 1915 00ea 2E       		.uleb128 0x2e
 1916 00eb 01       		.byte	0x1
 1917 00ec 3F       		.uleb128 0x3f
 1918 00ed 19       		.uleb128 0x19
 1919 00ee 03       		.uleb128 0x3
 1920 00ef 0E       		.uleb128 0xe
 1921 00f0 3A       		.uleb128 0x3a
 1922 00f1 0B       		.uleb128 0xb
 1923 00f2 3B       		.uleb128 0x3b
 1924 00f3 0B       		.uleb128 0xb
 1925 00f4 27       		.uleb128 0x27
 1926 00f5 19       		.uleb128 0x19
 1927 00f6 11       		.uleb128 0x11
 1928 00f7 01       		.uleb128 0x1
 1929 00f8 12       		.uleb128 0x12
 1930 00f9 06       		.uleb128 0x6
 1931 00fa 40       		.uleb128 0x40
 1932 00fb 18       		.uleb128 0x18
 1933 00fc 9742     		.uleb128 0x2117
 1934 00fe 19       		.uleb128 0x19
 1935 00ff 01       		.uleb128 0x1
 1936 0100 13       		.uleb128 0x13
 1937 0101 00       		.byte	0
 1938 0102 00       		.byte	0
 1939 0103 14       		.uleb128 0x14
 1940 0104 898201   		.uleb128 0x4109
 1941 0107 00       		.byte	0
 1942 0108 11       		.uleb128 0x11
 1943 0109 01       		.uleb128 0x1
 1944 010a 31       		.uleb128 0x31
 1945 010b 13       		.uleb128 0x13
 1946 010c 00       		.byte	0
 1947 010d 00       		.byte	0
 1948 010e 15       		.uleb128 0x15
 1949 010f 2E       		.uleb128 0x2e
 1950 0110 00       		.byte	0
 1951 0111 3F       		.uleb128 0x3f
 1952 0112 19       		.uleb128 0x19
 1953 0113 03       		.uleb128 0x3
 1954 0114 0E       		.uleb128 0xe
 1955 0115 3A       		.uleb128 0x3a
 1956 0116 0B       		.uleb128 0xb
 1957 0117 3B       		.uleb128 0x3b
 1958 0118 05       		.uleb128 0x5
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 51


 1959 0119 27       		.uleb128 0x27
 1960 011a 19       		.uleb128 0x19
 1961 011b 11       		.uleb128 0x11
 1962 011c 01       		.uleb128 0x1
 1963 011d 12       		.uleb128 0x12
 1964 011e 06       		.uleb128 0x6
 1965 011f 40       		.uleb128 0x40
 1966 0120 18       		.uleb128 0x18
 1967 0121 9742     		.uleb128 0x2117
 1968 0123 19       		.uleb128 0x19
 1969 0124 00       		.byte	0
 1970 0125 00       		.byte	0
 1971 0126 16       		.uleb128 0x16
 1972 0127 2E       		.uleb128 0x2e
 1973 0128 01       		.byte	0x1
 1974 0129 3F       		.uleb128 0x3f
 1975 012a 19       		.uleb128 0x19
 1976 012b 03       		.uleb128 0x3
 1977 012c 0E       		.uleb128 0xe
 1978 012d 3A       		.uleb128 0x3a
 1979 012e 0B       		.uleb128 0xb
 1980 012f 3B       		.uleb128 0x3b
 1981 0130 05       		.uleb128 0x5
 1982 0131 27       		.uleb128 0x27
 1983 0132 19       		.uleb128 0x19
 1984 0133 49       		.uleb128 0x49
 1985 0134 13       		.uleb128 0x13
 1986 0135 11       		.uleb128 0x11
 1987 0136 01       		.uleb128 0x1
 1988 0137 12       		.uleb128 0x12
 1989 0138 06       		.uleb128 0x6
 1990 0139 40       		.uleb128 0x40
 1991 013a 18       		.uleb128 0x18
 1992 013b 9742     		.uleb128 0x2117
 1993 013d 19       		.uleb128 0x19
 1994 013e 01       		.uleb128 0x1
 1995 013f 13       		.uleb128 0x13
 1996 0140 00       		.byte	0
 1997 0141 00       		.byte	0
 1998 0142 17       		.uleb128 0x17
 1999 0143 05       		.uleb128 0x5
 2000 0144 00       		.byte	0
 2001 0145 03       		.uleb128 0x3
 2002 0146 0E       		.uleb128 0xe
 2003 0147 3A       		.uleb128 0x3a
 2004 0148 0B       		.uleb128 0xb
 2005 0149 3B       		.uleb128 0x3b
 2006 014a 05       		.uleb128 0x5
 2007 014b 49       		.uleb128 0x49
 2008 014c 13       		.uleb128 0x13
 2009 014d 02       		.uleb128 0x2
 2010 014e 17       		.uleb128 0x17
 2011 014f 00       		.byte	0
 2012 0150 00       		.byte	0
 2013 0151 18       		.uleb128 0x18
 2014 0152 34       		.uleb128 0x34
 2015 0153 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 52


 2016 0154 03       		.uleb128 0x3
 2017 0155 0E       		.uleb128 0xe
 2018 0156 3A       		.uleb128 0x3a
 2019 0157 0B       		.uleb128 0xb
 2020 0158 3B       		.uleb128 0x3b
 2021 0159 05       		.uleb128 0x5
 2022 015a 49       		.uleb128 0x49
 2023 015b 13       		.uleb128 0x13
 2024 015c 02       		.uleb128 0x2
 2025 015d 17       		.uleb128 0x17
 2026 015e 00       		.byte	0
 2027 015f 00       		.byte	0
 2028 0160 19       		.uleb128 0x19
 2029 0161 2E       		.uleb128 0x2e
 2030 0162 01       		.byte	0x1
 2031 0163 3F       		.uleb128 0x3f
 2032 0164 19       		.uleb128 0x19
 2033 0165 03       		.uleb128 0x3
 2034 0166 0E       		.uleb128 0xe
 2035 0167 3A       		.uleb128 0x3a
 2036 0168 0B       		.uleb128 0xb
 2037 0169 3B       		.uleb128 0x3b
 2038 016a 05       		.uleb128 0x5
 2039 016b 27       		.uleb128 0x27
 2040 016c 19       		.uleb128 0x19
 2041 016d 49       		.uleb128 0x49
 2042 016e 13       		.uleb128 0x13
 2043 016f 11       		.uleb128 0x11
 2044 0170 01       		.uleb128 0x1
 2045 0171 12       		.uleb128 0x12
 2046 0172 06       		.uleb128 0x6
 2047 0173 40       		.uleb128 0x40
 2048 0174 18       		.uleb128 0x18
 2049 0175 9642     		.uleb128 0x2116
 2050 0177 19       		.uleb128 0x19
 2051 0178 01       		.uleb128 0x1
 2052 0179 13       		.uleb128 0x13
 2053 017a 00       		.byte	0
 2054 017b 00       		.byte	0
 2055 017c 1A       		.uleb128 0x1a
 2056 017d 34       		.uleb128 0x34
 2057 017e 00       		.byte	0
 2058 017f 03       		.uleb128 0x3
 2059 0180 0E       		.uleb128 0xe
 2060 0181 3A       		.uleb128 0x3a
 2061 0182 0B       		.uleb128 0xb
 2062 0183 3B       		.uleb128 0x3b
 2063 0184 05       		.uleb128 0x5
 2064 0185 49       		.uleb128 0x49
 2065 0186 13       		.uleb128 0x13
 2066 0187 02       		.uleb128 0x2
 2067 0188 18       		.uleb128 0x18
 2068 0189 00       		.byte	0
 2069 018a 00       		.byte	0
 2070 018b 1B       		.uleb128 0x1b
 2071 018c 34       		.uleb128 0x34
 2072 018d 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 53


 2073 018e 03       		.uleb128 0x3
 2074 018f 0E       		.uleb128 0xe
 2075 0190 3A       		.uleb128 0x3a
 2076 0191 0B       		.uleb128 0xb
 2077 0192 3B       		.uleb128 0x3b
 2078 0193 05       		.uleb128 0x5
 2079 0194 49       		.uleb128 0x49
 2080 0195 13       		.uleb128 0x13
 2081 0196 00       		.byte	0
 2082 0197 00       		.byte	0
 2083 0198 1C       		.uleb128 0x1c
 2084 0199 34       		.uleb128 0x34
 2085 019a 00       		.byte	0
 2086 019b 03       		.uleb128 0x3
 2087 019c 0E       		.uleb128 0xe
 2088 019d 3A       		.uleb128 0x3a
 2089 019e 0B       		.uleb128 0xb
 2090 019f 3B       		.uleb128 0x3b
 2091 01a0 0B       		.uleb128 0xb
 2092 01a1 49       		.uleb128 0x49
 2093 01a2 13       		.uleb128 0x13
 2094 01a3 3F       		.uleb128 0x3f
 2095 01a4 19       		.uleb128 0x19
 2096 01a5 02       		.uleb128 0x2
 2097 01a6 18       		.uleb128 0x18
 2098 01a7 00       		.byte	0
 2099 01a8 00       		.byte	0
 2100 01a9 1D       		.uleb128 0x1d
 2101 01aa 2E       		.uleb128 0x2e
 2102 01ab 01       		.byte	0x1
 2103 01ac 3F       		.uleb128 0x3f
 2104 01ad 19       		.uleb128 0x19
 2105 01ae 03       		.uleb128 0x3
 2106 01af 0E       		.uleb128 0xe
 2107 01b0 3A       		.uleb128 0x3a
 2108 01b1 0B       		.uleb128 0xb
 2109 01b2 3B       		.uleb128 0x3b
 2110 01b3 0B       		.uleb128 0xb
 2111 01b4 27       		.uleb128 0x27
 2112 01b5 19       		.uleb128 0x19
 2113 01b6 3C       		.uleb128 0x3c
 2114 01b7 19       		.uleb128 0x19
 2115 01b8 01       		.uleb128 0x1
 2116 01b9 13       		.uleb128 0x13
 2117 01ba 00       		.byte	0
 2118 01bb 00       		.byte	0
 2119 01bc 1E       		.uleb128 0x1e
 2120 01bd 05       		.uleb128 0x5
 2121 01be 00       		.byte	0
 2122 01bf 49       		.uleb128 0x49
 2123 01c0 13       		.uleb128 0x13
 2124 01c1 00       		.byte	0
 2125 01c2 00       		.byte	0
 2126 01c3 1F       		.uleb128 0x1f
 2127 01c4 2E       		.uleb128 0x2e
 2128 01c5 01       		.byte	0x1
 2129 01c6 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 54


 2130 01c7 19       		.uleb128 0x19
 2131 01c8 03       		.uleb128 0x3
 2132 01c9 0E       		.uleb128 0xe
 2133 01ca 3A       		.uleb128 0x3a
 2134 01cb 0B       		.uleb128 0xb
 2135 01cc 3B       		.uleb128 0x3b
 2136 01cd 0B       		.uleb128 0xb
 2137 01ce 27       		.uleb128 0x27
 2138 01cf 19       		.uleb128 0x19
 2139 01d0 49       		.uleb128 0x49
 2140 01d1 13       		.uleb128 0x13
 2141 01d2 3C       		.uleb128 0x3c
 2142 01d3 19       		.uleb128 0x19
 2143 01d4 01       		.uleb128 0x1
 2144 01d5 13       		.uleb128 0x13
 2145 01d6 00       		.byte	0
 2146 01d7 00       		.byte	0
 2147 01d8 20       		.uleb128 0x20
 2148 01d9 2E       		.uleb128 0x2e
 2149 01da 01       		.byte	0x1
 2150 01db 3F       		.uleb128 0x3f
 2151 01dc 19       		.uleb128 0x19
 2152 01dd 03       		.uleb128 0x3
 2153 01de 0E       		.uleb128 0xe
 2154 01df 3A       		.uleb128 0x3a
 2155 01e0 0B       		.uleb128 0xb
 2156 01e1 3B       		.uleb128 0x3b
 2157 01e2 0B       		.uleb128 0xb
 2158 01e3 27       		.uleb128 0x27
 2159 01e4 19       		.uleb128 0x19
 2160 01e5 3C       		.uleb128 0x3c
 2161 01e6 19       		.uleb128 0x19
 2162 01e7 00       		.byte	0
 2163 01e8 00       		.byte	0
 2164 01e9 00       		.byte	0
 2165              		.section	.debug_loc,"",%progbits
 2166              	.Ldebug_loc0:
 2167              	.LLST0:
 2168 0000 7C000000 		.4byte	.LVL5
 2169 0004 80000000 		.4byte	.LVL6
 2170 0008 0200     		.2byte	0x2
 2171 000a 30       		.byte	0x30
 2172 000b 9F       		.byte	0x9f
 2173 000c 80000000 		.4byte	.LVL6
 2174 0010 14010000 		.4byte	.LVL20
 2175 0014 0100     		.2byte	0x1
 2176 0016 54       		.byte	0x54
 2177 0017 00000000 		.4byte	0
 2178 001b 00000000 		.4byte	0
 2179              	.LLST1:
 2180 001f 70000000 		.4byte	.LVL2
 2181 0023 76000000 		.4byte	.LVL3
 2182 0027 0700     		.2byte	0x7
 2183 0029 71       		.byte	0x71
 2184 002a 00       		.sleb128 0
 2185 002b 40       		.byte	0x40
 2186 002c 49       		.byte	0x49
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 55


 2187 002d 24       		.byte	0x24
 2188 002e 21       		.byte	0x21
 2189 002f 9F       		.byte	0x9f
 2190 0030 7A000000 		.4byte	.LVL4
 2191 0034 80000000 		.4byte	.LVL6
 2192 0038 0100     		.2byte	0x1
 2193 003a 53       		.byte	0x53
 2194 003b 8C000000 		.4byte	.LVL7
 2195 003f 9E000000 		.4byte	.LVL9
 2196 0043 0100     		.2byte	0x1
 2197 0045 53       		.byte	0x53
 2198 0046 9E000000 		.4byte	.LVL9
 2199 004a A4000000 		.4byte	.LVL10
 2200 004e 0200     		.2byte	0x2
 2201 0050 72       		.byte	0x72
 2202 0051 00       		.sleb128 0
 2203 0052 A4000000 		.4byte	.LVL10
 2204 0056 B0000000 		.4byte	.LVL11
 2205 005a 0700     		.2byte	0x7
 2206 005c 74       		.byte	0x74
 2207 005d 00       		.sleb128 0
 2208 005e 32       		.byte	0x32
 2209 005f 24       		.byte	0x24
 2210 0060 7C       		.byte	0x7c
 2211 0061 00       		.sleb128 0
 2212 0062 22       		.byte	0x22
 2213 0063 B0000000 		.4byte	.LVL11
 2214 0067 B4000000 		.4byte	.LVL12
 2215 006b 1E00     		.2byte	0x1e
 2216 006d 74       		.byte	0x74
 2217 006e 00       		.sleb128 0
 2218 006f 32       		.byte	0x32
 2219 0070 24       		.byte	0x24
 2220 0071 03       		.byte	0x3
 2221 0072 00000000 		.4byte	.LANCHOR0
 2222 0076 22       		.byte	0x22
 2223 0077 06       		.byte	0x6
 2224 0078 0A       		.byte	0xa
 2225 0079 0037     		.2byte	0x3700
 2226 007b 1A       		.byte	0x1a
 2227 007c 74       		.byte	0x74
 2228 007d 00       		.sleb128 0
 2229 007e 03       		.byte	0x3
 2230 007f 10000000 		.4byte	.LANCHOR0+16
 2231 0083 22       		.byte	0x22
 2232 0084 94       		.byte	0x94
 2233 0085 01       		.byte	0x1
 2234 0086 08       		.byte	0x8
 2235 0087 FF       		.byte	0xff
 2236 0088 1A       		.byte	0x1a
 2237 0089 21       		.byte	0x21
 2238 008a 9F       		.byte	0x9f
 2239 008b B4000000 		.4byte	.LVL12
 2240 008f C0000000 		.4byte	.LVL13
 2241 0093 1A00     		.2byte	0x1a
 2242 0095 74       		.byte	0x74
 2243 0096 00       		.sleb128 0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 56


 2244 0097 32       		.byte	0x32
 2245 0098 24       		.byte	0x24
 2246 0099 72       		.byte	0x72
 2247 009a 00       		.sleb128 0
 2248 009b 22       		.byte	0x22
 2249 009c 06       		.byte	0x6
 2250 009d 0A       		.byte	0xa
 2251 009e 0037     		.2byte	0x3700
 2252 00a0 1A       		.byte	0x1a
 2253 00a1 72       		.byte	0x72
 2254 00a2 00       		.sleb128 0
 2255 00a3 74       		.byte	0x74
 2256 00a4 00       		.sleb128 0
 2257 00a5 22       		.byte	0x22
 2258 00a6 23       		.byte	0x23
 2259 00a7 10       		.uleb128 0x10
 2260 00a8 94       		.byte	0x94
 2261 00a9 01       		.byte	0x1
 2262 00aa 08       		.byte	0x8
 2263 00ab FF       		.byte	0xff
 2264 00ac 1A       		.byte	0x1a
 2265 00ad 21       		.byte	0x21
 2266 00ae 9F       		.byte	0x9f
 2267 00af C0000000 		.4byte	.LVL13
 2268 00b3 D0000000 		.4byte	.LVL14
 2269 00b7 1E00     		.2byte	0x1e
 2270 00b9 74       		.byte	0x74
 2271 00ba 00       		.sleb128 0
 2272 00bb 32       		.byte	0x32
 2273 00bc 24       		.byte	0x24
 2274 00bd 03       		.byte	0x3
 2275 00be 00000000 		.4byte	.LANCHOR0
 2276 00c2 22       		.byte	0x22
 2277 00c3 06       		.byte	0x6
 2278 00c4 0A       		.byte	0xa
 2279 00c5 0037     		.2byte	0x3700
 2280 00c7 1A       		.byte	0x1a
 2281 00c8 74       		.byte	0x74
 2282 00c9 00       		.sleb128 0
 2283 00ca 03       		.byte	0x3
 2284 00cb 10000000 		.4byte	.LANCHOR0+16
 2285 00cf 22       		.byte	0x22
 2286 00d0 94       		.byte	0x94
 2287 00d1 01       		.byte	0x1
 2288 00d2 08       		.byte	0x8
 2289 00d3 FF       		.byte	0xff
 2290 00d4 1A       		.byte	0x1a
 2291 00d5 21       		.byte	0x21
 2292 00d6 9F       		.byte	0x9f
 2293 00d7 D0000000 		.4byte	.LVL14
 2294 00db D6000000 		.4byte	.LVL15
 2295 00df 1A00     		.2byte	0x1a
 2296 00e1 74       		.byte	0x74
 2297 00e2 00       		.sleb128 0
 2298 00e3 32       		.byte	0x32
 2299 00e4 24       		.byte	0x24
 2300 00e5 72       		.byte	0x72
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 57


 2301 00e6 00       		.sleb128 0
 2302 00e7 22       		.byte	0x22
 2303 00e8 06       		.byte	0x6
 2304 00e9 0A       		.byte	0xa
 2305 00ea 0037     		.2byte	0x3700
 2306 00ec 1A       		.byte	0x1a
 2307 00ed 72       		.byte	0x72
 2308 00ee 00       		.sleb128 0
 2309 00ef 74       		.byte	0x74
 2310 00f0 00       		.sleb128 0
 2311 00f1 22       		.byte	0x22
 2312 00f2 23       		.byte	0x23
 2313 00f3 10       		.uleb128 0x10
 2314 00f4 94       		.byte	0x94
 2315 00f5 01       		.byte	0x1
 2316 00f6 08       		.byte	0x8
 2317 00f7 FF       		.byte	0xff
 2318 00f8 1A       		.byte	0x1a
 2319 00f9 21       		.byte	0x21
 2320 00fa 9F       		.byte	0x9f
 2321 00fb D6000000 		.4byte	.LVL15
 2322 00ff 10010000 		.4byte	.LVL19
 2323 0103 1E00     		.2byte	0x1e
 2324 0105 74       		.byte	0x74
 2325 0106 00       		.sleb128 0
 2326 0107 32       		.byte	0x32
 2327 0108 24       		.byte	0x24
 2328 0109 03       		.byte	0x3
 2329 010a 00000000 		.4byte	.LANCHOR0
 2330 010e 22       		.byte	0x22
 2331 010f 06       		.byte	0x6
 2332 0110 0A       		.byte	0xa
 2333 0111 0037     		.2byte	0x3700
 2334 0113 1A       		.byte	0x1a
 2335 0114 74       		.byte	0x74
 2336 0115 00       		.sleb128 0
 2337 0116 03       		.byte	0x3
 2338 0117 10000000 		.4byte	.LANCHOR0+16
 2339 011b 22       		.byte	0x22
 2340 011c 94       		.byte	0x94
 2341 011d 01       		.byte	0x1
 2342 011e 08       		.byte	0x8
 2343 011f FF       		.byte	0xff
 2344 0120 1A       		.byte	0x1a
 2345 0121 21       		.byte	0x21
 2346 0122 9F       		.byte	0x9f
 2347 0123 00000000 		.4byte	0
 2348 0127 00000000 		.4byte	0
 2349              	.LLST2:
 2350 012b E0000000 		.4byte	.LVL16
 2351 012f FA000000 		.4byte	.LVL17
 2352 0133 0100     		.2byte	0x1
 2353 0135 50       		.byte	0x50
 2354 0136 00000000 		.4byte	0
 2355 013a 00000000 		.4byte	0
 2356              	.LLST3:
 2357 013e 00000000 		.4byte	.LVL24
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 58


 2358 0142 06000000 		.4byte	.LVL26
 2359 0146 0100     		.2byte	0x1
 2360 0148 50       		.byte	0x50
 2361 0149 06000000 		.4byte	.LVL26
 2362 014d 1A000000 		.4byte	.LVL28
 2363 0151 0100     		.2byte	0x1
 2364 0153 52       		.byte	0x52
 2365 0154 1A000000 		.4byte	.LVL28
 2366 0158 20000000 		.4byte	.LVL29
 2367 015c 0400     		.2byte	0x4
 2368 015e F3       		.byte	0xf3
 2369 015f 01       		.uleb128 0x1
 2370 0160 50       		.byte	0x50
 2371 0161 9F       		.byte	0x9f
 2372 0162 20000000 		.4byte	.LVL29
 2373 0166 22000000 		.4byte	.LVL30
 2374 016a 0100     		.2byte	0x1
 2375 016c 50       		.byte	0x50
 2376 016d 22000000 		.4byte	.LVL30
 2377 0171 28000000 		.4byte	.LFE8
 2378 0175 0400     		.2byte	0x4
 2379 0177 F3       		.byte	0xf3
 2380 0178 01       		.uleb128 0x1
 2381 0179 50       		.byte	0x50
 2382 017a 9F       		.byte	0x9f
 2383 017b 00000000 		.4byte	0
 2384 017f 00000000 		.4byte	0
 2385              	.LLST4:
 2386 0183 02000000 		.4byte	.LVL25
 2387 0187 06000000 		.4byte	.LVL26
 2388 018b 0200     		.2byte	0x2
 2389 018d 30       		.byte	0x30
 2390 018e 9F       		.byte	0x9f
 2391 018f 0E000000 		.4byte	.LVL27
 2392 0193 20000000 		.4byte	.LVL29
 2393 0197 0100     		.2byte	0x1
 2394 0199 50       		.byte	0x50
 2395 019a 20000000 		.4byte	.LVL29
 2396 019e 22000000 		.4byte	.LVL30
 2397 01a2 0200     		.2byte	0x2
 2398 01a4 30       		.byte	0x30
 2399 01a5 9F       		.byte	0x9f
 2400 01a6 22000000 		.4byte	.LVL30
 2401 01aa 28000000 		.4byte	.LFE8
 2402 01ae 0100     		.2byte	0x1
 2403 01b0 50       		.byte	0x50
 2404 01b1 00000000 		.4byte	0
 2405 01b5 00000000 		.4byte	0
 2406              	.LLST5:
 2407 01b9 00000000 		.4byte	.LVL31
 2408 01bd 0A000000 		.4byte	.LVL32
 2409 01c1 0100     		.2byte	0x1
 2410 01c3 50       		.byte	0x50
 2411 01c4 0A000000 		.4byte	.LVL32
 2412 01c8 14000000 		.4byte	.LVL34
 2413 01cc 0100     		.2byte	0x1
 2414 01ce 54       		.byte	0x54
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 59


 2415 01cf 14000000 		.4byte	.LVL34
 2416 01d3 22000000 		.4byte	.LVL36
 2417 01d7 0400     		.2byte	0x4
 2418 01d9 F3       		.byte	0xf3
 2419 01da 01       		.uleb128 0x1
 2420 01db 50       		.byte	0x50
 2421 01dc 9F       		.byte	0x9f
 2422 01dd 22000000 		.4byte	.LVL36
 2423 01e1 24000000 		.4byte	.LVL37
 2424 01e5 0100     		.2byte	0x1
 2425 01e7 54       		.byte	0x54
 2426 01e8 24000000 		.4byte	.LVL37
 2427 01ec 2C000000 		.4byte	.LFE9
 2428 01f0 0400     		.2byte	0x4
 2429 01f2 F3       		.byte	0xf3
 2430 01f3 01       		.uleb128 0x1
 2431 01f4 50       		.byte	0x50
 2432 01f5 9F       		.byte	0x9f
 2433 01f6 00000000 		.4byte	0
 2434 01fa 00000000 		.4byte	0
 2435              	.LLST6:
 2436 01fe 20000000 		.4byte	.LVL35
 2437 0202 22000000 		.4byte	.LVL36
 2438 0206 0100     		.2byte	0x1
 2439 0208 50       		.byte	0x50
 2440 0209 24000000 		.4byte	.LVL37
 2441 020d 26000000 		.4byte	.LVL38
 2442 0211 0100     		.2byte	0x1
 2443 0213 50       		.byte	0x50
 2444 0214 00000000 		.4byte	0
 2445 0218 00000000 		.4byte	0
 2446              	.LLST7:
 2447 021c 00000000 		.4byte	.LVL39
 2448 0220 04000000 		.4byte	.LVL40
 2449 0224 0100     		.2byte	0x1
 2450 0226 50       		.byte	0x50
 2451 0227 04000000 		.4byte	.LVL40
 2452 022b 10000000 		.4byte	.LFE10
 2453 022f 0400     		.2byte	0x4
 2454 0231 F3       		.byte	0xf3
 2455 0232 01       		.uleb128 0x1
 2456 0233 50       		.byte	0x50
 2457 0234 9F       		.byte	0x9f
 2458 0235 00000000 		.4byte	0
 2459 0239 00000000 		.4byte	0
 2460              	.LLST8:
 2461 023d 00000000 		.4byte	.LVL41
 2462 0241 0E000000 		.4byte	.LVL42
 2463 0245 0100     		.2byte	0x1
 2464 0247 50       		.byte	0x50
 2465 0248 0E000000 		.4byte	.LVL42
 2466 024c 1C000000 		.4byte	.LFE11
 2467 0250 0400     		.2byte	0x4
 2468 0252 F3       		.byte	0xf3
 2469 0253 01       		.uleb128 0x1
 2470 0254 50       		.byte	0x50
 2471 0255 9F       		.byte	0x9f
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 60


 2472 0256 00000000 		.4byte	0
 2473 025a 00000000 		.4byte	0
 2474              	.LLST9:
 2475 025e 00000000 		.4byte	.LVL43
 2476 0262 0E000000 		.4byte	.LVL44
 2477 0266 0100     		.2byte	0x1
 2478 0268 50       		.byte	0x50
 2479 0269 0E000000 		.4byte	.LVL44
 2480 026d 18000000 		.4byte	.LFE12
 2481 0271 0400     		.2byte	0x4
 2482 0273 F3       		.byte	0xf3
 2483 0274 01       		.uleb128 0x1
 2484 0275 50       		.byte	0x50
 2485 0276 9F       		.byte	0x9f
 2486 0277 00000000 		.4byte	0
 2487 027b 00000000 		.4byte	0
 2488              	.LLST10:
 2489 027f 00000000 		.4byte	.LVL45
 2490 0283 04000000 		.4byte	.LVL46
 2491 0287 0100     		.2byte	0x1
 2492 0289 50       		.byte	0x50
 2493 028a 04000000 		.4byte	.LVL46
 2494 028e 10000000 		.4byte	.LFE13
 2495 0292 0400     		.2byte	0x4
 2496 0294 F3       		.byte	0xf3
 2497 0295 01       		.uleb128 0x1
 2498 0296 50       		.byte	0x50
 2499 0297 9F       		.byte	0x9f
 2500 0298 00000000 		.4byte	0
 2501 029c 00000000 		.4byte	0
 2502              	.LLST11:
 2503 02a0 00000000 		.4byte	.LVL47
 2504 02a4 04000000 		.4byte	.LVL48
 2505 02a8 0100     		.2byte	0x1
 2506 02aa 50       		.byte	0x50
 2507 02ab 04000000 		.4byte	.LVL48
 2508 02af 10000000 		.4byte	.LFE14
 2509 02b3 0400     		.2byte	0x4
 2510 02b5 F3       		.byte	0xf3
 2511 02b6 01       		.uleb128 0x1
 2512 02b7 50       		.byte	0x50
 2513 02b8 9F       		.byte	0x9f
 2514 02b9 00000000 		.4byte	0
 2515 02bd 00000000 		.4byte	0
 2516              	.LLST12:
 2517 02c1 00000000 		.4byte	.LVL49
 2518 02c5 0C000000 		.4byte	.LVL50
 2519 02c9 0100     		.2byte	0x1
 2520 02cb 50       		.byte	0x50
 2521 02cc 0C000000 		.4byte	.LVL50
 2522 02d0 12000000 		.4byte	.LVL52
 2523 02d4 0100     		.2byte	0x1
 2524 02d6 54       		.byte	0x54
 2525 02d7 12000000 		.4byte	.LVL52
 2526 02db 1C000000 		.4byte	.LFE15
 2527 02df 0400     		.2byte	0x4
 2528 02e1 F3       		.byte	0xf3
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 61


 2529 02e2 01       		.uleb128 0x1
 2530 02e3 50       		.byte	0x50
 2531 02e4 9F       		.byte	0x9f
 2532 02e5 00000000 		.4byte	0
 2533 02e9 00000000 		.4byte	0
 2534              	.LLST13:
 2535 02ed 00000000 		.4byte	.LVL49
 2536 02f1 0F000000 		.4byte	.LVL51-1
 2537 02f5 0100     		.2byte	0x1
 2538 02f7 51       		.byte	0x51
 2539 02f8 0F000000 		.4byte	.LVL51-1
 2540 02fc 1C000000 		.4byte	.LFE15
 2541 0300 0400     		.2byte	0x4
 2542 0302 F3       		.byte	0xf3
 2543 0303 01       		.uleb128 0x1
 2544 0304 51       		.byte	0x51
 2545 0305 9F       		.byte	0x9f
 2546 0306 00000000 		.4byte	0
 2547 030a 00000000 		.4byte	0
 2548              	.LLST14:
 2549 030e 00000000 		.4byte	.LVL53
 2550 0312 0C000000 		.4byte	.LVL54
 2551 0316 0100     		.2byte	0x1
 2552 0318 50       		.byte	0x50
 2553 0319 0C000000 		.4byte	.LVL54
 2554 031d 12000000 		.4byte	.LVL56
 2555 0321 0100     		.2byte	0x1
 2556 0323 54       		.byte	0x54
 2557 0324 12000000 		.4byte	.LVL56
 2558 0328 1C000000 		.4byte	.LFE16
 2559 032c 0400     		.2byte	0x4
 2560 032e F3       		.byte	0xf3
 2561 032f 01       		.uleb128 0x1
 2562 0330 50       		.byte	0x50
 2563 0331 9F       		.byte	0x9f
 2564 0332 00000000 		.4byte	0
 2565 0336 00000000 		.4byte	0
 2566              	.LLST15:
 2567 033a 00000000 		.4byte	.LVL53
 2568 033e 0F000000 		.4byte	.LVL55-1
 2569 0342 0100     		.2byte	0x1
 2570 0344 51       		.byte	0x51
 2571 0345 0F000000 		.4byte	.LVL55-1
 2572 0349 16000000 		.4byte	.LVL57
 2573 034d 0100     		.2byte	0x1
 2574 034f 55       		.byte	0x55
 2575 0350 16000000 		.4byte	.LVL57
 2576 0354 1C000000 		.4byte	.LFE16
 2577 0358 0800     		.2byte	0x8
 2578 035a F3       		.byte	0xf3
 2579 035b 01       		.uleb128 0x1
 2580 035c 50       		.byte	0x50
 2581 035d 32       		.byte	0x32
 2582 035e 24       		.byte	0x24
 2583 035f 73       		.byte	0x73
 2584 0360 00       		.sleb128 0
 2585 0361 22       		.byte	0x22
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 62


 2586 0362 00000000 		.4byte	0
 2587 0366 00000000 		.4byte	0
 2588              	.LLST16:
 2589 036a 00000000 		.4byte	.LVL58
 2590 036e 0C000000 		.4byte	.LVL59
 2591 0372 0100     		.2byte	0x1
 2592 0374 50       		.byte	0x50
 2593 0375 0C000000 		.4byte	.LVL59
 2594 0379 44000000 		.4byte	.LVL65
 2595 037d 0100     		.2byte	0x1
 2596 037f 54       		.byte	0x54
 2597 0380 44000000 		.4byte	.LVL65
 2598 0384 5C000000 		.4byte	.LFE17
 2599 0388 0400     		.2byte	0x4
 2600 038a F3       		.byte	0xf3
 2601 038b 01       		.uleb128 0x1
 2602 038c 50       		.byte	0x50
 2603 038d 9F       		.byte	0x9f
 2604 038e 00000000 		.4byte	0
 2605 0392 00000000 		.4byte	0
 2606              	.LLST17:
 2607 0396 00000000 		.4byte	.LVL58
 2608 039a 0F000000 		.4byte	.LVL60-1
 2609 039e 0100     		.2byte	0x1
 2610 03a0 51       		.byte	0x51
 2611 03a1 0F000000 		.4byte	.LVL60-1
 2612 03a5 1A000000 		.4byte	.LVL61
 2613 03a9 0400     		.2byte	0x4
 2614 03ab F3       		.byte	0xf3
 2615 03ac 01       		.uleb128 0x1
 2616 03ad 51       		.byte	0x51
 2617 03ae 9F       		.byte	0x9f
 2618 03af 1A000000 		.4byte	.LVL61
 2619 03b3 28000000 		.4byte	.LVL62
 2620 03b7 0100     		.2byte	0x1
 2621 03b9 51       		.byte	0x51
 2622 03ba 32000000 		.4byte	.LVL63
 2623 03be 36000000 		.4byte	.LVL64
 2624 03c2 0100     		.2byte	0x1
 2625 03c4 51       		.byte	0x51
 2626 03c5 00000000 		.4byte	0
 2627 03c9 00000000 		.4byte	0
 2628              	.LLST18:
 2629 03cd 00000000 		.4byte	.LVL67
 2630 03d1 0C000000 		.4byte	.LVL68
 2631 03d5 0100     		.2byte	0x1
 2632 03d7 50       		.byte	0x50
 2633 03d8 0C000000 		.4byte	.LVL68
 2634 03dc 26000000 		.4byte	.LVL72
 2635 03e0 0100     		.2byte	0x1
 2636 03e2 55       		.byte	0x55
 2637 03e3 26000000 		.4byte	.LVL72
 2638 03e7 40000000 		.4byte	.LFE18
 2639 03eb 0400     		.2byte	0x4
 2640 03ed F3       		.byte	0xf3
 2641 03ee 01       		.uleb128 0x1
 2642 03ef 50       		.byte	0x50
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 63


 2643 03f0 9F       		.byte	0x9f
 2644 03f1 00000000 		.4byte	0
 2645 03f5 00000000 		.4byte	0
 2646              	.LLST19:
 2647 03f9 00000000 		.4byte	.LVL67
 2648 03fd 0F000000 		.4byte	.LVL69-1
 2649 0401 0100     		.2byte	0x1
 2650 0403 51       		.byte	0x51
 2651 0404 0F000000 		.4byte	.LVL69-1
 2652 0408 1A000000 		.4byte	.LVL70
 2653 040c 0400     		.2byte	0x4
 2654 040e F3       		.byte	0xf3
 2655 040f 01       		.uleb128 0x1
 2656 0410 51       		.byte	0x51
 2657 0411 9F       		.byte	0x9f
 2658 0412 1A000000 		.4byte	.LVL70
 2659 0416 23000000 		.4byte	.LVL71-1
 2660 041a 0100     		.2byte	0x1
 2661 041c 50       		.byte	0x50
 2662 041d 00000000 		.4byte	0
 2663 0421 00000000 		.4byte	0
 2664              	.LLST20:
 2665 0425 00000000 		.4byte	.LVL74
 2666 0429 0C000000 		.4byte	.LVL75
 2667 042d 0100     		.2byte	0x1
 2668 042f 50       		.byte	0x50
 2669 0430 0C000000 		.4byte	.LVL75
 2670 0434 28000000 		.4byte	.LVL80
 2671 0438 0100     		.2byte	0x1
 2672 043a 54       		.byte	0x54
 2673 043b 28000000 		.4byte	.LVL80
 2674 043f 48000000 		.4byte	.LFE19
 2675 0443 0400     		.2byte	0x4
 2676 0445 F3       		.byte	0xf3
 2677 0446 01       		.uleb128 0x1
 2678 0447 50       		.byte	0x50
 2679 0448 9F       		.byte	0x9f
 2680 0449 00000000 		.4byte	0
 2681 044d 00000000 		.4byte	0
 2682              	.LLST21:
 2683 0451 00000000 		.4byte	.LVL74
 2684 0455 0F000000 		.4byte	.LVL76-1
 2685 0459 0100     		.2byte	0x1
 2686 045b 51       		.byte	0x51
 2687 045c 0F000000 		.4byte	.LVL76-1
 2688 0460 1A000000 		.4byte	.LVL77
 2689 0464 0400     		.2byte	0x4
 2690 0466 F3       		.byte	0xf3
 2691 0467 01       		.uleb128 0x1
 2692 0468 51       		.byte	0x51
 2693 0469 9F       		.byte	0x9f
 2694 046a 1A000000 		.4byte	.LVL77
 2695 046e 1D000000 		.4byte	.LVL78-1
 2696 0472 0100     		.2byte	0x1
 2697 0474 50       		.byte	0x50
 2698 0475 00000000 		.4byte	0
 2699 0479 00000000 		.4byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 64


 2700              		.section	.debug_aranges,"",%progbits
 2701 0000 A4000000 		.4byte	0xa4
 2702 0004 0200     		.2byte	0x2
 2703 0006 00000000 		.4byte	.Ldebug_info0
 2704 000a 04       		.byte	0x4
 2705 000b 00       		.byte	0
 2706 000c 0000     		.2byte	0
 2707 000e 0000     		.2byte	0
 2708 0010 00000000 		.4byte	.LFB3
 2709 0014 88010000 		.4byte	.LFE3-.LFB3
 2710 0018 00000000 		.4byte	.LFB4
 2711 001c 30000000 		.4byte	.LFE4-.LFB4
 2712 0020 00000000 		.4byte	.LFB2
 2713 0024 20000000 		.4byte	.LFE2-.LFB2
 2714 0028 00000000 		.4byte	.LFB5
 2715 002c 10000000 		.4byte	.LFE5-.LFB5
 2716 0030 00000000 		.4byte	.LFB6
 2717 0034 14000000 		.4byte	.LFE6-.LFB6
 2718 0038 00000000 		.4byte	.LFB7
 2719 003c 14000000 		.4byte	.LFE7-.LFB7
 2720 0040 00000000 		.4byte	.LFB8
 2721 0044 28000000 		.4byte	.LFE8-.LFB8
 2722 0048 00000000 		.4byte	.LFB9
 2723 004c 2C000000 		.4byte	.LFE9-.LFB9
 2724 0050 00000000 		.4byte	.LFB10
 2725 0054 10000000 		.4byte	.LFE10-.LFB10
 2726 0058 00000000 		.4byte	.LFB11
 2727 005c 1C000000 		.4byte	.LFE11-.LFB11
 2728 0060 00000000 		.4byte	.LFB12
 2729 0064 18000000 		.4byte	.LFE12-.LFB12
 2730 0068 00000000 		.4byte	.LFB13
 2731 006c 10000000 		.4byte	.LFE13-.LFB13
 2732 0070 00000000 		.4byte	.LFB14
 2733 0074 10000000 		.4byte	.LFE14-.LFB14
 2734 0078 00000000 		.4byte	.LFB15
 2735 007c 1C000000 		.4byte	.LFE15-.LFB15
 2736 0080 00000000 		.4byte	.LFB16
 2737 0084 1C000000 		.4byte	.LFE16-.LFB16
 2738 0088 00000000 		.4byte	.LFB17
 2739 008c 5C000000 		.4byte	.LFE17-.LFB17
 2740 0090 00000000 		.4byte	.LFB18
 2741 0094 40000000 		.4byte	.LFE18-.LFB18
 2742 0098 00000000 		.4byte	.LFB19
 2743 009c 48000000 		.4byte	.LFE19-.LFB19
 2744 00a0 00000000 		.4byte	0
 2745 00a4 00000000 		.4byte	0
 2746              		.section	.debug_ranges,"",%progbits
 2747              	.Ldebug_ranges0:
 2748 0000 00000000 		.4byte	.LFB3
 2749 0004 88010000 		.4byte	.LFE3
 2750 0008 00000000 		.4byte	.LFB4
 2751 000c 30000000 		.4byte	.LFE4
 2752 0010 00000000 		.4byte	.LFB2
 2753 0014 20000000 		.4byte	.LFE2
 2754 0018 00000000 		.4byte	.LFB5
 2755 001c 10000000 		.4byte	.LFE5
 2756 0020 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 65


 2757 0024 14000000 		.4byte	.LFE6
 2758 0028 00000000 		.4byte	.LFB7
 2759 002c 14000000 		.4byte	.LFE7
 2760 0030 00000000 		.4byte	.LFB8
 2761 0034 28000000 		.4byte	.LFE8
 2762 0038 00000000 		.4byte	.LFB9
 2763 003c 2C000000 		.4byte	.LFE9
 2764 0040 00000000 		.4byte	.LFB10
 2765 0044 10000000 		.4byte	.LFE10
 2766 0048 00000000 		.4byte	.LFB11
 2767 004c 1C000000 		.4byte	.LFE11
 2768 0050 00000000 		.4byte	.LFB12
 2769 0054 18000000 		.4byte	.LFE12
 2770 0058 00000000 		.4byte	.LFB13
 2771 005c 10000000 		.4byte	.LFE13
 2772 0060 00000000 		.4byte	.LFB14
 2773 0064 10000000 		.4byte	.LFE14
 2774 0068 00000000 		.4byte	.LFB15
 2775 006c 1C000000 		.4byte	.LFE15
 2776 0070 00000000 		.4byte	.LFB16
 2777 0074 1C000000 		.4byte	.LFE16
 2778 0078 00000000 		.4byte	.LFB17
 2779 007c 5C000000 		.4byte	.LFE17
 2780 0080 00000000 		.4byte	.LFB18
 2781 0084 40000000 		.4byte	.LFE18
 2782 0088 00000000 		.4byte	.LFB19
 2783 008c 48000000 		.4byte	.LFE19
 2784 0090 00000000 		.4byte	0
 2785 0094 00000000 		.4byte	0
 2786              		.section	.debug_line,"",%progbits
 2787              	.Ldebug_line0:
 2788 0000 98020000 		.section	.debug_str,"MS",%progbits,1
 2788      02005500 
 2788      00000201 
 2788      FB0E0D00 
 2788      01010101 
 2789              	.LASF58:
 2790 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2790      5341525F 
 2790      5365715F 
 2790      315F6F66 
 2790      66736574 
 2791              	.LASF10:
 2792 0015 75696E74 		.ascii	"uint16\000"
 2792      313600
 2793              	.LASF26:
 2794 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2794      5341525F 
 2794      5365715F 
 2794      315F496E 
 2794      697400
 2795              	.LASF49:
 2796 002f 61646347 		.ascii	"adcGain\000"
 2796      61696E00 
 2797              	.LASF24:
 2798 0037 636F756E 		.ascii	"counts\000"
 2798      747300
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 66


 2799              	.LASF30:
 2800 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2800      5341525F 
 2800      5365715F 
 2800      315F5374 
 2800      61727443 
 2801              	.LASF45:
 2802 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2802      5341525F 
 2802      5365715F 
 2802      315F5365 
 2802      74536174 
 2803              	.LASF28:
 2804 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2804      5341525F 
 2804      5365715F 
 2804      315F5374 
 2804      61727400 
 2805              	.LASF7:
 2806 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2806      206C6F6E 
 2806      6720756E 
 2806      7369676E 
 2806      65642069 
 2807              	.LASF27:
 2808 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2808      5341525F 
 2808      5365715F 
 2808      315F456E 
 2808      61626C65 
 2809              	.LASF25:
 2810 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_InputsPlacement\000"
 2810      5341525F 
 2810      5365715F 
 2810      315F496E 
 2810      70757473 
 2811              	.LASF34:
 2812 00d0 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2812      5341525F 
 2812      5365715F 
 2812      315F4765 
 2812      74526573 
 2813              	.LASF6:
 2814 00ea 6C6F6E67 		.ascii	"long long int\000"
 2814      206C6F6E 
 2814      6720696E 
 2814      7400
 2815              	.LASF0:
 2816 00f8 7369676E 		.ascii	"signed char\000"
 2816      65642063 
 2816      68617200 
 2817              	.LASF42:
 2818 0104 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2818      5341525F 
 2818      5365715F 
 2818      315F5365 
 2818      74486967 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 67


 2819              	.LASF13:
 2820 011f 696E7433 		.ascii	"int32\000"
 2820      3200
 2821              	.LASF53:
 2822 0125 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2822      5341525F 
 2822      5365715F 
 2822      315F436F 
 2822      756E7473 
 2823              	.LASF4:
 2824 0143 6C6F6E67 		.ascii	"long int\000"
 2824      20696E74 
 2824      00
 2825              	.LASF9:
 2826 014c 75696E74 		.ascii	"uint8\000"
 2826      3800
 2827              	.LASF61:
 2828 0152 43794465 		.ascii	"CyDelayUs\000"
 2828      6C617955 
 2828      7300
 2829              	.LASF16:
 2830 015c 646F7562 		.ascii	"double\000"
 2830      6C6500
 2831              	.LASF11:
 2832 0163 75696E74 		.ascii	"uint32\000"
 2832      333200
 2833              	.LASF39:
 2834 016a 6D61736B 		.ascii	"mask\000"
 2834      00
 2835              	.LASF50:
 2836 016f 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2836      5341525F 
 2836      5365715F 
 2836      315F436F 
 2836      756E7473 
 2837              	.LASF35:
 2838 018d 7265744D 		.ascii	"retMode\000"
 2838      6F646500 
 2839              	.LASF57:
 2840 0195 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2840      5341525F 
 2840      5365715F 
 2840      315F696E 
 2840      69745661 
 2841              	.LASF8:
 2842 01ab 756E7369 		.ascii	"unsigned int\000"
 2842      676E6564 
 2842      20696E74 
 2842      00
 2843              	.LASF65:
 2844 01b8 75566F6C 		.ascii	"uVolts\000"
 2844      747300
 2845              	.LASF5:
 2846 01bf 6C6F6E67 		.ascii	"long unsigned int\000"
 2846      20756E73 
 2846      69676E65 
 2846      6420696E 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 68


 2846      7400
 2847              	.LASF55:
 2848 01d1 766F6C74 		.ascii	"volts\000"
 2848      7300
 2849              	.LASF23:
 2850 01d7 746D7052 		.ascii	"tmpRegVal\000"
 2850      65675661 
 2850      6C00
 2851              	.LASF64:
 2852 01e1 433A5C55 		.ascii	"C:\\Users\\Nick\\Documents\\PSoC Creator\\capsensel"
 2852      73657273 
 2852      5C4E6963 
 2852      6B5C446F 
 2852      63756D65 
 2853 020f 6564315C 		.ascii	"ed1\\capsenseled\\capsenseled.cydsn\000"
 2853      63617073 
 2853      656E7365 
 2853      6C65645C 
 2853      63617073 
 2854              	.LASF3:
 2855 0231 73686F72 		.ascii	"short unsigned int\000"
 2855      7420756E 
 2855      7369676E 
 2855      65642069 
 2855      6E7400
 2856              	.LASF66:
 2857 0244 4379496E 		.ascii	"CyIntSetVector\000"
 2857      74536574 
 2857      56656374 
 2857      6F7200
 2858              	.LASF56:
 2859 0253 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2859      5341525F 
 2859      5365715F 
 2859      315F6368 
 2859      616E6E65 
 2860              	.LASF52:
 2861 0270 6D566F6C 		.ascii	"mVolts\000"
 2861      747300
 2862              	.LASF19:
 2863 0277 72656733 		.ascii	"reg32\000"
 2863      3200
 2864              	.LASF14:
 2865 027d 666C6F61 		.ascii	"float32\000"
 2865      74333200 
 2866              	.LASF21:
 2867 0285 73697A65 		.ascii	"sizetype\000"
 2867      74797065 
 2867      00
 2868              	.LASF41:
 2869 028e 6C6F774C 		.ascii	"lowLimit\000"
 2869      696D6974 
 2869      00
 2870              	.LASF33:
 2871 0297 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2871      5341525F 
 2871      5365715F 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 69


 2871      315F4973 
 2871      456E6443 
 2872              	.LASF31:
 2873 02b5 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2873      5341525F 
 2873      5365715F 
 2873      315F5374 
 2873      6F70436F 
 2874              	.LASF62:
 2875 02cf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2875      4320342E 
 2875      392E3320 
 2875      32303135 
 2875      30333033 
 2876 0302 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2876      20726576 
 2876      6973696F 
 2876      6E203232 
 2876      31323230 
 2877 0335 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2877      66756E63 
 2877      74696F6E 
 2877      2D736563 
 2877      74696F6E 
 2878              	.LASF17:
 2879 035d 696E7436 		.ascii	"int64\000"
 2879      3400
 2880              	.LASF60:
 2881 0363 4379496E 		.ascii	"CyIntSetPriority\000"
 2881      74536574 
 2881      5072696F 
 2881      72697479 
 2881      00
 2882              	.LASF63:
 2883 0374 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2883      72617465 
 2883      645F536F 
 2883      75726365 
 2883      5C50536F 
 2884              	.LASF15:
 2885 039b 666C6F61 		.ascii	"float\000"
 2885      7400
 2886              	.LASF48:
 2887 03a1 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2887      5341525F 
 2887      5365715F 
 2887      315F5365 
 2887      74476169 
 2888              	.LASF29:
 2889 03b7 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2889      5341525F 
 2889      5365715F 
 2889      315F5374 
 2889      6F7000
 2890              	.LASF43:
 2891 03ca 68696768 		.ascii	"highLimit\000"
 2891      4C696D69 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 70


 2891      7400
 2892              	.LASF67:
 2893 03d4 43794861 		.ascii	"CyHalt\000"
 2893      6C7400
 2894              	.LASF1:
 2895 03db 756E7369 		.ascii	"unsigned char\000"
 2895      676E6564 
 2895      20636861 
 2895      7200
 2896              	.LASF2:
 2897 03e9 73686F72 		.ascii	"short int\000"
 2897      7420696E 
 2897      7400
 2898              	.LASF54:
 2899 03f3 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2899      5341525F 
 2899      5365715F 
 2899      315F436F 
 2899      756E7473 
 2900              	.LASF38:
 2901 0410 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2901      5341525F 
 2901      5365715F 
 2901      315F5365 
 2901      74436861 
 2902              	.LASF22:
 2903 042a 63684E75 		.ascii	"chNum\000"
 2903      6D00
 2904              	.LASF36:
 2905 0430 6368616E 		.ascii	"chan\000"
 2905      00
 2906              	.LASF18:
 2907 0435 63686172 		.ascii	"char\000"
 2907      00
 2908              	.LASF20:
 2909 043a 63796973 		.ascii	"cyisraddress\000"
 2909      72616464 
 2909      72657373 
 2909      00
 2910              	.LASF40:
 2911 0447 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2911      5341525F 
 2911      5365715F 
 2911      315F5365 
 2911      744C6F77 
 2912              	.LASF47:
 2913 0461 6F666673 		.ascii	"offset\000"
 2913      657400
 2914              	.LASF51:
 2915 0468 61646343 		.ascii	"adcCounts\000"
 2915      6F756E74 
 2915      7300
 2916              	.LASF59:
 2917 0472 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2917      5341525F 
 2917      5365715F 
 2917      315F636F 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\cc6ZAR9j.s 			page 71


 2917      756E7473 
 2918              	.LASF32:
 2919 0490 73746174 		.ascii	"status\000"
 2919      757300
 2920              	.LASF46:
 2921 0497 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2921      5341525F 
 2921      5365715F 
 2921      315F5365 
 2921      744F6666 
 2922              	.LASF12:
 2923 04af 696E7431 		.ascii	"int16\000"
 2923      3600
 2924              	.LASF44:
 2925 04b5 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2925      5341525F 
 2925      5365715F 
 2925      315F5365 
 2925      744C696D 
 2926              	.LASF37:
 2927 04d0 72657375 		.ascii	"result\000"
 2927      6C7400
 2928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
