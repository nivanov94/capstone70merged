ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartReadRxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartReadRxData, %function
  23              	UART_SpiUartReadRxData:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * \file UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * \version 3.20
   4:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * \brief
   6:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * \copyright
  13:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  19:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  22:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  23:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  24:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  25:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  26:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  27:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  29:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  31:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /**
  32:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \addtogroup group_globals
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 2


  33:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \{
  34:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  35:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  was occurred.
  37:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  38:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  39:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /** \} globals */
  40:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  41:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  42:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  43:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
  45:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  47:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  48:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  49:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  50:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  52:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  53:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  54:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  55:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  56:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  57:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  58:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  59:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  60:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  61:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  62:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
  63:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  64:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  70:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  71:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
  72:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  76:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
  77:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
  78:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  79:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
  80:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  81:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  82:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  83:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  84:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 84 0
  27              		.cfi_startproc
  28              	.LVL0:
  85:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  86:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 3


  87:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  88:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  89:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  90:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  92:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  93:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  94:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  95:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  98:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  99:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 100:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 102:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
 103:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 104:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 105:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
 107:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 108:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
 109:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
 110:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 111:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 112:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 113:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 115:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 116:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 118:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 119:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 120:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 121:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 122:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 123:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 124:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 125:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 126:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 127:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 128:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 129:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
  29              		.loc 1 129 0
  30 0000 014B     		ldr	r3, .L2
  31 0002 1868     		ldr	r0, [r3]
  32              	.LVL1:
 130:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 131:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 132:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 133:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
 134:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  33              		.loc 1 134 0
  34              		@ sp needed
  35 0004 7047     		bx	lr
  36              	.L3:
  37 0006 C046     		.align	2
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 4


  38              	.L2:
  39 0008 40032440 		.word	1076101952
  40              		.cfi_endproc
  41              	.LFE2:
  42              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
  43              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
  44              		.align	2
  45              		.global	UART_SpiUartGetRxBufferSize
  46              		.code	16
  47              		.thumb_func
  48              		.type	UART_SpiUartGetRxBufferSize, %function
  49              	UART_SpiUartGetRxBufferSize:
  50              	.LFB3:
 135:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 136:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 137:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 138:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 139:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 140:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 141:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 144:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 147:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 148:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements.
 149:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 150:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 151:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 152:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 153:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 154:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 155:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 156:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 157:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 158:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  51              		.loc 1 158 0
  52              		.cfi_startproc
 159:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 160:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 161:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 162:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 163:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 164:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 165:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 166:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 167:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 168:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 169:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 170:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 171:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 172:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 173:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 174:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 175:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 176:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 5


 177:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 178:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 179:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
  53              		.loc 1 179 0
  54 0000 024B     		ldr	r3, .L5
  55 0002 1B68     		ldr	r3, [r3]
  56 0004 1F20     		mov	r0, #31
  57 0006 1840     		and	r0, r3
  58              	.LVL2:
 180:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 181:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 182:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 183:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 184:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  59              		.loc 1 184 0
  60              		@ sp needed
  61 0008 7047     		bx	lr
  62              	.L6:
  63 000a C046     		.align	2
  64              	.L5:
  65 000c 08032440 		.word	1076101896
  66              		.cfi_endproc
  67              	.LFE3:
  68              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
  69              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
  70              		.align	2
  71              		.global	UART_SpiUartClearRxBuffer
  72              		.code	16
  73              		.thumb_func
  74              		.type	UART_SpiUartClearRxBuffer, %function
  75              	UART_SpiUartClearRxBuffer:
  76              	.LFB4:
 185:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 186:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 187:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 188:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 189:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 190:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 191:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 193:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 194:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 195:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 196:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 197:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 198:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 199:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 200:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 201:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  77              		.loc 1 201 0
  78              		.cfi_startproc
 202:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 203:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 204:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 205:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 206:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 207:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 6


 208:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 209:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 210:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 211:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 212:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 213:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 214:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 215:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 216:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 218:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 219:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 220:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 221:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 222:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             
 223:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 224:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 225:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 226:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 227:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 228:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
  79              		.loc 1 228 0
  80 0000 054B     		ldr	r3, .L8
  81 0002 1A68     		ldr	r2, [r3]
  82 0004 8021     		mov	r1, #128
  83 0006 4902     		lsl	r1, r1, #9
  84 0008 0A43     		orr	r2, r1
  85 000a 1A60     		str	r2, [r3]
  86 000c 1968     		ldr	r1, [r3]
  87 000e 034A     		ldr	r2, .L8+4
  88 0010 0A40     		and	r2, r1
  89 0012 1A60     		str	r2, [r3]
 229:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 230:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 231:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  90              		.loc 1 231 0
  91              		@ sp needed
  92 0014 7047     		bx	lr
  93              	.L9:
  94 0016 C046     		.align	2
  95              	.L8:
  96 0018 04032440 		.word	1076101892
  97 001c FFFFFEFF 		.word	-65537
  98              		.cfi_endproc
  99              	.LFE4:
 100              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
 101              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
 102              		.align	2
 103              		.global	UART_SpiUartWriteTxData
 104              		.code	16
 105              		.thumb_func
 106              		.type	UART_SpiUartWriteTxData, %function
 107              	UART_SpiUartWriteTxData:
 108              	.LFB5:
 232:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 233:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 234:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 7


 235:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 236:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 237:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 238:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 239:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 240:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 241:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 243:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 246:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 250:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 251:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 252:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 253:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 254:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 255:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 256:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 257:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 258:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 109              		.loc 1 258 0
 110              		.cfi_startproc
 111              	.LVL3:
 112              	.L11:
 259:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 260:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 261:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 262:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 263:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 264:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 265:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 267:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 268:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 269:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 271:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 272:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 273:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 274:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 275:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 276:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 277:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 280:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 281:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 282:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 283:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 284:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 286:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 287:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 8


 288:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 289:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 291:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 293:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 294:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 295:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 296:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 297:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 298:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 300:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 301:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 303:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 304:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 305:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 306:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 307:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 308:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
 113              		.loc 1 309 0 discriminator 1
 114 0000 044B     		ldr	r3, .L12
 115 0002 1B68     		ldr	r3, [r3]
 116 0004 1F22     		mov	r2, #31
 117 0006 1340     		and	r3, r2
 118 0008 082B     		cmp	r3, #8
 119 000a F9D0     		beq	.L11
 310:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 311:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 312:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 313:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 120              		.loc 1 313 0
 121 000c 024B     		ldr	r3, .L12+4
 122 000e 1860     		str	r0, [r3]
 314:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 315:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 316:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 123              		.loc 1 316 0
 124              		@ sp needed
 125 0010 7047     		bx	lr
 126              	.L13:
 127 0012 C046     		.align	2
 128              	.L12:
 129 0014 08022440 		.word	1076101640
 130 0018 40022440 		.word	1076101696
 131              		.cfi_endproc
 132              	.LFE5:
 133              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
 134              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
 135              		.align	2
 136              		.global	UART_SpiUartPutArray
 137              		.code	16
 138              		.thumb_func
 139              		.type	UART_SpiUartPutArray, %function
 140              	UART_SpiUartPutArray:
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 9


 141              	.LFB6:
 317:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 318:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 319:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 320:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 321:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 322:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 327:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 328:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 333:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 334:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 335:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 336:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 337:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 338:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 339:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 142              		.loc 1 341 0
 143              		.cfi_startproc
 144              	.LVL4:
 145 0000 70B5     		push	{r4, r5, r6, lr}
 146              		.cfi_def_cfa_offset 16
 147              		.cfi_offset 4, -16
 148              		.cfi_offset 5, -12
 149              		.cfi_offset 6, -8
 150              		.cfi_offset 14, -4
 151 0002 061C     		mov	r6, r0
 152 0004 0D1C     		mov	r5, r1
 153              	.LVL5:
 342:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 343:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 154              		.loc 1 344 0
 155 0006 0024     		mov	r4, #0
 156 0008 03E0     		b	.L15
 157              	.LVL6:
 158              	.L16:
 345:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 346:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 159              		.loc 1 346 0 discriminator 3
 160 000a 305D     		ldrb	r0, [r6, r4]
 161 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
 162              	.LVL7:
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 163              		.loc 1 344 0 discriminator 3
 164 0010 0134     		add	r4, r4, #1
 165              	.LVL8:
 166              	.L15:
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 10


 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 167              		.loc 1 344 0 is_stmt 0 discriminator 1
 168 0012 AC42     		cmp	r4, r5
 169 0014 F9D3     		bcc	.L16
 347:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 348:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 170              		.loc 1 348 0 is_stmt 1
 171              		@ sp needed
 172              	.LVL9:
 173              	.LVL10:
 174              	.LVL11:
 175 0016 70BD     		pop	{r4, r5, r6, pc}
 176              		.cfi_endproc
 177              	.LFE6:
 178              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
 179              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
 180              		.align	2
 181              		.global	UART_SpiUartGetTxBufferSize
 182              		.code	16
 183              		.thumb_func
 184              		.type	UART_SpiUartGetTxBufferSize, %function
 185              	UART_SpiUartGetTxBufferSize:
 186              	.LFB7:
 349:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 350:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 351:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 352:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 353:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 354:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 355:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     TX FIFO.
 358:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     not full.
 362:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 363:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 364:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 366:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 367:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 368:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 369:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 370:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 371:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 372:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 373:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 374:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 187              		.loc 1 374 0
 188              		.cfi_startproc
 375:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 376:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 377:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 378:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 379:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 11


 381:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 382:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 383:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 384:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 385:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 386:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 387:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 388:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 389:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 390:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 391:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 392:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 393:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 394:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 395:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 396:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 189              		.loc 1 396 0
 190 0000 024B     		ldr	r3, .L18
 191 0002 1B68     		ldr	r3, [r3]
 192 0004 1F20     		mov	r0, #31
 193 0006 1840     		and	r0, r3
 194              	.LVL12:
 397:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 398:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 399:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 400:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 401:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 195              		.loc 1 401 0
 196              		@ sp needed
 197 0008 7047     		bx	lr
 198              	.L19:
 199 000a C046     		.align	2
 200              	.L18:
 201 000c 08022440 		.word	1076101640
 202              		.cfi_endproc
 203              	.LFE7:
 204              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 205              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 206              		.align	2
 207              		.global	UART_SpiUartClearTxBuffer
 208              		.code	16
 209              		.thumb_func
 210              		.type	UART_SpiUartClearTxBuffer, %function
 211              	UART_SpiUartClearTxBuffer:
 212              	.LFB8:
 402:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 403:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 404:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 405:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 406:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 407:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 408:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 410:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 411:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 412:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 413:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 12


 414:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 415:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 416:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 417:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 418:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 213              		.loc 1 418 0
 214              		.cfi_startproc
 419:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 420:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 421:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 422:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 423:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 424:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 425:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 426:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 427:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 428:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 429:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 430:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 431:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 432:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 433:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 434:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 435:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 436:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 215              		.loc 1 436 0
 216 0000 054B     		ldr	r3, .L21
 217 0002 1A68     		ldr	r2, [r3]
 218 0004 8021     		mov	r1, #128
 219 0006 4902     		lsl	r1, r1, #9
 220 0008 0A43     		orr	r2, r1
 221 000a 1A60     		str	r2, [r3]
 222 000c 1968     		ldr	r1, [r3]
 223 000e 034A     		ldr	r2, .L21+4
 224 0010 0A40     		and	r2, r1
 225 0012 1A60     		str	r2, [r3]
 437:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 438:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 439:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 226              		.loc 1 439 0
 227              		@ sp needed
 228 0014 7047     		bx	lr
 229              	.L22:
 230 0016 C046     		.align	2
 231              	.L21:
 232 0018 04022440 		.word	1076101636
 233 001c FFFFFEFF 		.word	-65537
 234              		.cfi_endproc
 235              	.LFE8:
 236              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 237              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 238              		.align	2
 239              		.global	UART_SpiUartDisableIntRx
 240              		.code	16
 241              		.thumb_func
 242              		.type	UART_SpiUartDisableIntRx, %function
 243              	UART_SpiUartDisableIntRx:
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 13


 244              	.LFB9:
 440:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 441:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 442:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 443:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 445:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 446:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 447:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 448:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 450:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 451:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 453:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 454:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 455:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 245              		.loc 1 455 0
 246              		.cfi_startproc
 456:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 457:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 458:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 247              		.loc 1 458 0
 248 0000 024B     		ldr	r3, .L24
 249 0002 1868     		ldr	r0, [r3]
 250              	.LVL13:
 459:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 460:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 251              		.loc 1 460 0
 252 0004 0022     		mov	r2, #0
 253 0006 1A60     		str	r2, [r3]
 461:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 462:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 463:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 254              		.loc 1 463 0
 255              		@ sp needed
 256 0008 7047     		bx	lr
 257              	.L25:
 258 000a C046     		.align	2
 259              	.L24:
 260 000c C80F2440 		.word	1076105160
 261              		.cfi_endproc
 262              	.LFE9:
 263              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 264              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 265              		.align	2
 266              		.global	UART_SpiUartDisableIntTx
 267              		.code	16
 268              		.thumb_func
 269              		.type	UART_SpiUartDisableIntTx, %function
 270              	UART_SpiUartDisableIntTx:
 271              	.LFB10:
 464:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 465:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 468:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 14


 469:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 470:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 471:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 472:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 473:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 475:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 477:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 272              		.loc 1 477 0
 273              		.cfi_startproc
 478:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 479:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 480:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 274              		.loc 1 480 0
 275 0000 024B     		ldr	r3, .L27
 276 0002 1868     		ldr	r0, [r3]
 277              	.LVL14:
 481:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 482:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 278              		.loc 1 482 0
 279 0004 0022     		mov	r2, #0
 280 0006 1A60     		str	r2, [r3]
 483:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 484:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 485:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 281              		.loc 1 485 0
 282              		@ sp needed
 283 0008 7047     		bx	lr
 284              	.L28:
 285 000a C046     		.align	2
 286              	.L27:
 287 000c 880F2440 		.word	1076105096
 288              		.cfi_endproc
 289              	.LFE10:
 290              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 291              		.text
 292              	.Letext0:
 293              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 294              		.section	.debug_info,"",%progbits
 295              	.Ldebug_info0:
 296 0000 13020000 		.4byte	0x213
 297 0004 0400     		.2byte	0x4
 298 0006 00000000 		.4byte	.Ldebug_abbrev0
 299 000a 04       		.byte	0x4
 300 000b 01       		.uleb128 0x1
 301 000c 9E010000 		.4byte	.LASF32
 302 0010 01       		.byte	0x1
 303 0011 36020000 		.4byte	.LASF33
 304 0015 0F010000 		.4byte	.LASF34
 305 0019 00000000 		.4byte	.Ldebug_ranges0+0
 306 001d 00000000 		.4byte	0
 307 0021 00000000 		.4byte	.Ldebug_line0
 308 0025 02       		.uleb128 0x2
 309 0026 01       		.byte	0x1
 310 0027 06       		.byte	0x6
 311 0028 9E020000 		.4byte	.LASF0
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 15


 312 002c 02       		.uleb128 0x2
 313 002d 01       		.byte	0x1
 314 002e 08       		.byte	0x8
 315 002f 95000000 		.4byte	.LASF1
 316 0033 02       		.uleb128 0x2
 317 0034 02       		.byte	0x2
 318 0035 05       		.byte	0x5
 319 0036 2C020000 		.4byte	.LASF2
 320 003a 02       		.uleb128 0x2
 321 003b 02       		.byte	0x2
 322 003c 07       		.byte	0x7
 323 003d 13000000 		.4byte	.LASF3
 324 0041 02       		.uleb128 0x2
 325 0042 04       		.byte	0x4
 326 0043 05       		.byte	0x5
 327 0044 76020000 		.4byte	.LASF4
 328 0048 02       		.uleb128 0x2
 329 0049 04       		.byte	0x4
 330 004a 07       		.byte	0x7
 331 004b 70000000 		.4byte	.LASF5
 332 004f 02       		.uleb128 0x2
 333 0050 08       		.byte	0x8
 334 0051 05       		.byte	0x5
 335 0052 5C010000 		.4byte	.LASF6
 336 0056 02       		.uleb128 0x2
 337 0057 08       		.byte	0x8
 338 0058 07       		.byte	0x7
 339 0059 F8000000 		.4byte	.LASF7
 340 005d 03       		.uleb128 0x3
 341 005e 04       		.byte	0x4
 342 005f 05       		.byte	0x5
 343 0060 696E7400 		.ascii	"int\000"
 344 0064 02       		.uleb128 0x2
 345 0065 04       		.byte	0x4
 346 0066 07       		.byte	0x7
 347 0067 26000000 		.4byte	.LASF8
 348 006b 04       		.uleb128 0x4
 349 006c 82000000 		.4byte	.LASF9
 350 0070 02       		.byte	0x2
 351 0071 C2       		.byte	0xc2
 352 0072 2C000000 		.4byte	0x2c
 353 0076 04       		.uleb128 0x4
 354 0077 AA000000 		.4byte	.LASF10
 355 007b 02       		.byte	0x2
 356 007c C4       		.byte	0xc4
 357 007d 48000000 		.4byte	0x48
 358 0081 02       		.uleb128 0x2
 359 0082 04       		.byte	0x4
 360 0083 04       		.byte	0x4
 361 0084 4C000000 		.4byte	.LASF11
 362 0088 02       		.uleb128 0x2
 363 0089 08       		.byte	0x8
 364 008a 04       		.byte	0x4
 365 008b A3000000 		.4byte	.LASF12
 366 008f 02       		.uleb128 0x2
 367 0090 01       		.byte	0x1
 368 0091 08       		.byte	0x8
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 16


 369 0092 7F020000 		.4byte	.LASF13
 370 0096 05       		.uleb128 0x5
 371 0097 00000000 		.4byte	.LASF14
 372 009b 02       		.byte	0x2
 373 009c 6E01     		.2byte	0x16e
 374 009e A2000000 		.4byte	0xa2
 375 00a2 06       		.uleb128 0x6
 376 00a3 76000000 		.4byte	0x76
 377 00a7 02       		.uleb128 0x2
 378 00a8 04       		.byte	0x4
 379 00a9 07       		.byte	0x7
 380 00aa 53010000 		.4byte	.LASF15
 381 00ae 07       		.uleb128 0x7
 382 00af 5F020000 		.4byte	.LASF16
 383 00b3 01       		.byte	0x1
 384 00b4 53       		.byte	0x53
 385 00b5 76000000 		.4byte	0x76
 386 00b9 00000000 		.4byte	.LFB2
 387 00bd 0C000000 		.4byte	.LFE2-.LFB2
 388 00c1 01       		.uleb128 0x1
 389 00c2 9C       		.byte	0x9c
 390 00c3 D7000000 		.4byte	0xd7
 391 00c7 08       		.uleb128 0x8
 392 00c8 88000000 		.4byte	.LASF18
 393 00cc 01       		.byte	0x1
 394 00cd 55       		.byte	0x55
 395 00ce 76000000 		.4byte	0x76
 396 00d2 00000000 		.4byte	.LLST0
 397 00d6 00       		.byte	0
 398 00d7 07       		.uleb128 0x7
 399 00d8 AA020000 		.4byte	.LASF17
 400 00dc 01       		.byte	0x1
 401 00dd 9D       		.byte	0x9d
 402 00de 76000000 		.4byte	0x76
 403 00e2 00000000 		.4byte	.LFB3
 404 00e6 10000000 		.4byte	.LFE3-.LFB3
 405 00ea 01       		.uleb128 0x1
 406 00eb 9C       		.byte	0x9c
 407 00ec FE000000 		.4byte	0xfe
 408 00f0 09       		.uleb128 0x9
 409 00f1 6B000000 		.4byte	.LASF19
 410 00f5 01       		.byte	0x1
 411 00f6 9F       		.byte	0x9f
 412 00f7 76000000 		.4byte	0x76
 413 00fb 01       		.uleb128 0x1
 414 00fc 50       		.byte	0x50
 415 00fd 00       		.byte	0
 416 00fe 0A       		.uleb128 0xa
 417 00ff 84020000 		.4byte	.LASF26
 418 0103 01       		.byte	0x1
 419 0104 C8       		.byte	0xc8
 420 0105 00000000 		.4byte	.LFB4
 421 0109 20000000 		.4byte	.LFE4-.LFB4
 422 010d 01       		.uleb128 0x1
 423 010e 9C       		.byte	0x9c
 424 010f 0B       		.uleb128 0xb
 425 0110 6A010000 		.4byte	.LASF20
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 17


 426 0114 01       		.byte	0x1
 427 0115 0101     		.2byte	0x101
 428 0117 00000000 		.4byte	.LFB5
 429 011b 1C000000 		.4byte	.LFE5-.LFB5
 430 011f 01       		.uleb128 0x1
 431 0120 9C       		.byte	0x9c
 432 0121 34010000 		.4byte	0x134
 433 0125 0C       		.uleb128 0xc
 434 0126 0C000000 		.4byte	.LASF22
 435 012a 01       		.byte	0x1
 436 012b 0101     		.2byte	0x101
 437 012d 76000000 		.4byte	0x76
 438 0131 01       		.uleb128 0x1
 439 0132 50       		.byte	0x50
 440 0133 00       		.byte	0
 441 0134 0B       		.uleb128 0xb
 442 0135 CB000000 		.4byte	.LASF21
 443 0139 01       		.byte	0x1
 444 013a 5401     		.2byte	0x154
 445 013c 00000000 		.4byte	.LFB6
 446 0140 18000000 		.4byte	.LFE6-.LFB6
 447 0144 01       		.uleb128 0x1
 448 0145 9C       		.byte	0x9c
 449 0146 82010000 		.4byte	0x182
 450 014a 0D       		.uleb128 0xd
 451 014b 8F000000 		.4byte	.LASF23
 452 014f 01       		.byte	0x1
 453 0150 5401     		.2byte	0x154
 454 0152 82010000 		.4byte	0x182
 455 0156 1F000000 		.4byte	.LLST1
 456 015a 0D       		.uleb128 0xd
 457 015b 06000000 		.4byte	.LASF24
 458 015f 01       		.byte	0x1
 459 0160 5401     		.2byte	0x154
 460 0162 76000000 		.4byte	0x76
 461 0166 4B000000 		.4byte	.LLST2
 462 016a 0E       		.uleb128 0xe
 463 016b 6900     		.ascii	"i\000"
 464 016d 01       		.byte	0x1
 465 016e 5601     		.2byte	0x156
 466 0170 76000000 		.4byte	0x76
 467 0174 77000000 		.4byte	.LLST3
 468 0178 0F       		.uleb128 0xf
 469 0179 10000000 		.4byte	.LVL7
 470 017d 0F010000 		.4byte	0x10f
 471 0181 00       		.byte	0
 472 0182 10       		.uleb128 0x10
 473 0183 04       		.byte	0x4
 474 0184 88010000 		.4byte	0x188
 475 0188 11       		.uleb128 0x11
 476 0189 6B000000 		.4byte	0x6b
 477 018d 12       		.uleb128 0x12
 478 018e 82010000 		.4byte	.LASF25
 479 0192 01       		.byte	0x1
 480 0193 7501     		.2byte	0x175
 481 0195 76000000 		.4byte	0x76
 482 0199 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 18


 483 019d 10000000 		.4byte	.LFE7-.LFB7
 484 01a1 01       		.uleb128 0x1
 485 01a2 9C       		.byte	0x9c
 486 01a3 B6010000 		.4byte	0x1b6
 487 01a7 13       		.uleb128 0x13
 488 01a8 6B000000 		.4byte	.LASF19
 489 01ac 01       		.byte	0x1
 490 01ad 7701     		.2byte	0x177
 491 01af 76000000 		.4byte	0x76
 492 01b3 01       		.uleb128 0x1
 493 01b4 50       		.byte	0x50
 494 01b5 00       		.byte	0
 495 01b6 14       		.uleb128 0x14
 496 01b7 B1000000 		.4byte	.LASF27
 497 01bb 01       		.byte	0x1
 498 01bc A101     		.2byte	0x1a1
 499 01be 00000000 		.4byte	.LFB8
 500 01c2 20000000 		.4byte	.LFE8-.LFB8
 501 01c6 01       		.uleb128 0x1
 502 01c7 9C       		.byte	0x9c
 503 01c8 12       		.uleb128 0x12
 504 01c9 33000000 		.4byte	.LASF28
 505 01cd 01       		.byte	0x1
 506 01ce C601     		.2byte	0x1c6
 507 01d0 76000000 		.4byte	0x76
 508 01d4 00000000 		.4byte	.LFB9
 509 01d8 10000000 		.4byte	.LFE9-.LFB9
 510 01dc 01       		.uleb128 0x1
 511 01dd 9C       		.byte	0x9c
 512 01de F1010000 		.4byte	0x1f1
 513 01e2 13       		.uleb128 0x13
 514 01e3 EE000000 		.4byte	.LASF29
 515 01e7 01       		.byte	0x1
 516 01e8 C801     		.2byte	0x1c8
 517 01ea 76000000 		.4byte	0x76
 518 01ee 01       		.uleb128 0x1
 519 01ef 50       		.byte	0x50
 520 01f0 00       		.byte	0
 521 01f1 15       		.uleb128 0x15
 522 01f2 52000000 		.4byte	.LASF30
 523 01f6 01       		.byte	0x1
 524 01f7 DC01     		.2byte	0x1dc
 525 01f9 76000000 		.4byte	0x76
 526 01fd 00000000 		.4byte	.LFB10
 527 0201 10000000 		.4byte	.LFE10-.LFB10
 528 0205 01       		.uleb128 0x1
 529 0206 9C       		.byte	0x9c
 530 0207 13       		.uleb128 0x13
 531 0208 E0000000 		.4byte	.LASF31
 532 020c 01       		.byte	0x1
 533 020d DE01     		.2byte	0x1de
 534 020f 76000000 		.4byte	0x76
 535 0213 01       		.uleb128 0x1
 536 0214 50       		.byte	0x50
 537 0215 00       		.byte	0
 538 0216 00       		.byte	0
 539              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 19


 540              	.Ldebug_abbrev0:
 541 0000 01       		.uleb128 0x1
 542 0001 11       		.uleb128 0x11
 543 0002 01       		.byte	0x1
 544 0003 25       		.uleb128 0x25
 545 0004 0E       		.uleb128 0xe
 546 0005 13       		.uleb128 0x13
 547 0006 0B       		.uleb128 0xb
 548 0007 03       		.uleb128 0x3
 549 0008 0E       		.uleb128 0xe
 550 0009 1B       		.uleb128 0x1b
 551 000a 0E       		.uleb128 0xe
 552 000b 55       		.uleb128 0x55
 553 000c 17       		.uleb128 0x17
 554 000d 11       		.uleb128 0x11
 555 000e 01       		.uleb128 0x1
 556 000f 10       		.uleb128 0x10
 557 0010 17       		.uleb128 0x17
 558 0011 00       		.byte	0
 559 0012 00       		.byte	0
 560 0013 02       		.uleb128 0x2
 561 0014 24       		.uleb128 0x24
 562 0015 00       		.byte	0
 563 0016 0B       		.uleb128 0xb
 564 0017 0B       		.uleb128 0xb
 565 0018 3E       		.uleb128 0x3e
 566 0019 0B       		.uleb128 0xb
 567 001a 03       		.uleb128 0x3
 568 001b 0E       		.uleb128 0xe
 569 001c 00       		.byte	0
 570 001d 00       		.byte	0
 571 001e 03       		.uleb128 0x3
 572 001f 24       		.uleb128 0x24
 573 0020 00       		.byte	0
 574 0021 0B       		.uleb128 0xb
 575 0022 0B       		.uleb128 0xb
 576 0023 3E       		.uleb128 0x3e
 577 0024 0B       		.uleb128 0xb
 578 0025 03       		.uleb128 0x3
 579 0026 08       		.uleb128 0x8
 580 0027 00       		.byte	0
 581 0028 00       		.byte	0
 582 0029 04       		.uleb128 0x4
 583 002a 16       		.uleb128 0x16
 584 002b 00       		.byte	0
 585 002c 03       		.uleb128 0x3
 586 002d 0E       		.uleb128 0xe
 587 002e 3A       		.uleb128 0x3a
 588 002f 0B       		.uleb128 0xb
 589 0030 3B       		.uleb128 0x3b
 590 0031 0B       		.uleb128 0xb
 591 0032 49       		.uleb128 0x49
 592 0033 13       		.uleb128 0x13
 593 0034 00       		.byte	0
 594 0035 00       		.byte	0
 595 0036 05       		.uleb128 0x5
 596 0037 16       		.uleb128 0x16
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 20


 597 0038 00       		.byte	0
 598 0039 03       		.uleb128 0x3
 599 003a 0E       		.uleb128 0xe
 600 003b 3A       		.uleb128 0x3a
 601 003c 0B       		.uleb128 0xb
 602 003d 3B       		.uleb128 0x3b
 603 003e 05       		.uleb128 0x5
 604 003f 49       		.uleb128 0x49
 605 0040 13       		.uleb128 0x13
 606 0041 00       		.byte	0
 607 0042 00       		.byte	0
 608 0043 06       		.uleb128 0x6
 609 0044 35       		.uleb128 0x35
 610 0045 00       		.byte	0
 611 0046 49       		.uleb128 0x49
 612 0047 13       		.uleb128 0x13
 613 0048 00       		.byte	0
 614 0049 00       		.byte	0
 615 004a 07       		.uleb128 0x7
 616 004b 2E       		.uleb128 0x2e
 617 004c 01       		.byte	0x1
 618 004d 3F       		.uleb128 0x3f
 619 004e 19       		.uleb128 0x19
 620 004f 03       		.uleb128 0x3
 621 0050 0E       		.uleb128 0xe
 622 0051 3A       		.uleb128 0x3a
 623 0052 0B       		.uleb128 0xb
 624 0053 3B       		.uleb128 0x3b
 625 0054 0B       		.uleb128 0xb
 626 0055 27       		.uleb128 0x27
 627 0056 19       		.uleb128 0x19
 628 0057 49       		.uleb128 0x49
 629 0058 13       		.uleb128 0x13
 630 0059 11       		.uleb128 0x11
 631 005a 01       		.uleb128 0x1
 632 005b 12       		.uleb128 0x12
 633 005c 06       		.uleb128 0x6
 634 005d 40       		.uleb128 0x40
 635 005e 18       		.uleb128 0x18
 636 005f 9742     		.uleb128 0x2117
 637 0061 19       		.uleb128 0x19
 638 0062 01       		.uleb128 0x1
 639 0063 13       		.uleb128 0x13
 640 0064 00       		.byte	0
 641 0065 00       		.byte	0
 642 0066 08       		.uleb128 0x8
 643 0067 34       		.uleb128 0x34
 644 0068 00       		.byte	0
 645 0069 03       		.uleb128 0x3
 646 006a 0E       		.uleb128 0xe
 647 006b 3A       		.uleb128 0x3a
 648 006c 0B       		.uleb128 0xb
 649 006d 3B       		.uleb128 0x3b
 650 006e 0B       		.uleb128 0xb
 651 006f 49       		.uleb128 0x49
 652 0070 13       		.uleb128 0x13
 653 0071 02       		.uleb128 0x2
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 21


 654 0072 17       		.uleb128 0x17
 655 0073 00       		.byte	0
 656 0074 00       		.byte	0
 657 0075 09       		.uleb128 0x9
 658 0076 34       		.uleb128 0x34
 659 0077 00       		.byte	0
 660 0078 03       		.uleb128 0x3
 661 0079 0E       		.uleb128 0xe
 662 007a 3A       		.uleb128 0x3a
 663 007b 0B       		.uleb128 0xb
 664 007c 3B       		.uleb128 0x3b
 665 007d 0B       		.uleb128 0xb
 666 007e 49       		.uleb128 0x49
 667 007f 13       		.uleb128 0x13
 668 0080 02       		.uleb128 0x2
 669 0081 18       		.uleb128 0x18
 670 0082 00       		.byte	0
 671 0083 00       		.byte	0
 672 0084 0A       		.uleb128 0xa
 673 0085 2E       		.uleb128 0x2e
 674 0086 00       		.byte	0
 675 0087 3F       		.uleb128 0x3f
 676 0088 19       		.uleb128 0x19
 677 0089 03       		.uleb128 0x3
 678 008a 0E       		.uleb128 0xe
 679 008b 3A       		.uleb128 0x3a
 680 008c 0B       		.uleb128 0xb
 681 008d 3B       		.uleb128 0x3b
 682 008e 0B       		.uleb128 0xb
 683 008f 27       		.uleb128 0x27
 684 0090 19       		.uleb128 0x19
 685 0091 11       		.uleb128 0x11
 686 0092 01       		.uleb128 0x1
 687 0093 12       		.uleb128 0x12
 688 0094 06       		.uleb128 0x6
 689 0095 40       		.uleb128 0x40
 690 0096 18       		.uleb128 0x18
 691 0097 9742     		.uleb128 0x2117
 692 0099 19       		.uleb128 0x19
 693 009a 00       		.byte	0
 694 009b 00       		.byte	0
 695 009c 0B       		.uleb128 0xb
 696 009d 2E       		.uleb128 0x2e
 697 009e 01       		.byte	0x1
 698 009f 3F       		.uleb128 0x3f
 699 00a0 19       		.uleb128 0x19
 700 00a1 03       		.uleb128 0x3
 701 00a2 0E       		.uleb128 0xe
 702 00a3 3A       		.uleb128 0x3a
 703 00a4 0B       		.uleb128 0xb
 704 00a5 3B       		.uleb128 0x3b
 705 00a6 05       		.uleb128 0x5
 706 00a7 27       		.uleb128 0x27
 707 00a8 19       		.uleb128 0x19
 708 00a9 11       		.uleb128 0x11
 709 00aa 01       		.uleb128 0x1
 710 00ab 12       		.uleb128 0x12
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 22


 711 00ac 06       		.uleb128 0x6
 712 00ad 40       		.uleb128 0x40
 713 00ae 18       		.uleb128 0x18
 714 00af 9742     		.uleb128 0x2117
 715 00b1 19       		.uleb128 0x19
 716 00b2 01       		.uleb128 0x1
 717 00b3 13       		.uleb128 0x13
 718 00b4 00       		.byte	0
 719 00b5 00       		.byte	0
 720 00b6 0C       		.uleb128 0xc
 721 00b7 05       		.uleb128 0x5
 722 00b8 00       		.byte	0
 723 00b9 03       		.uleb128 0x3
 724 00ba 0E       		.uleb128 0xe
 725 00bb 3A       		.uleb128 0x3a
 726 00bc 0B       		.uleb128 0xb
 727 00bd 3B       		.uleb128 0x3b
 728 00be 05       		.uleb128 0x5
 729 00bf 49       		.uleb128 0x49
 730 00c0 13       		.uleb128 0x13
 731 00c1 02       		.uleb128 0x2
 732 00c2 18       		.uleb128 0x18
 733 00c3 00       		.byte	0
 734 00c4 00       		.byte	0
 735 00c5 0D       		.uleb128 0xd
 736 00c6 05       		.uleb128 0x5
 737 00c7 00       		.byte	0
 738 00c8 03       		.uleb128 0x3
 739 00c9 0E       		.uleb128 0xe
 740 00ca 3A       		.uleb128 0x3a
 741 00cb 0B       		.uleb128 0xb
 742 00cc 3B       		.uleb128 0x3b
 743 00cd 05       		.uleb128 0x5
 744 00ce 49       		.uleb128 0x49
 745 00cf 13       		.uleb128 0x13
 746 00d0 02       		.uleb128 0x2
 747 00d1 17       		.uleb128 0x17
 748 00d2 00       		.byte	0
 749 00d3 00       		.byte	0
 750 00d4 0E       		.uleb128 0xe
 751 00d5 34       		.uleb128 0x34
 752 00d6 00       		.byte	0
 753 00d7 03       		.uleb128 0x3
 754 00d8 08       		.uleb128 0x8
 755 00d9 3A       		.uleb128 0x3a
 756 00da 0B       		.uleb128 0xb
 757 00db 3B       		.uleb128 0x3b
 758 00dc 05       		.uleb128 0x5
 759 00dd 49       		.uleb128 0x49
 760 00de 13       		.uleb128 0x13
 761 00df 02       		.uleb128 0x2
 762 00e0 17       		.uleb128 0x17
 763 00e1 00       		.byte	0
 764 00e2 00       		.byte	0
 765 00e3 0F       		.uleb128 0xf
 766 00e4 898201   		.uleb128 0x4109
 767 00e7 00       		.byte	0
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 23


 768 00e8 11       		.uleb128 0x11
 769 00e9 01       		.uleb128 0x1
 770 00ea 31       		.uleb128 0x31
 771 00eb 13       		.uleb128 0x13
 772 00ec 00       		.byte	0
 773 00ed 00       		.byte	0
 774 00ee 10       		.uleb128 0x10
 775 00ef 0F       		.uleb128 0xf
 776 00f0 00       		.byte	0
 777 00f1 0B       		.uleb128 0xb
 778 00f2 0B       		.uleb128 0xb
 779 00f3 49       		.uleb128 0x49
 780 00f4 13       		.uleb128 0x13
 781 00f5 00       		.byte	0
 782 00f6 00       		.byte	0
 783 00f7 11       		.uleb128 0x11
 784 00f8 26       		.uleb128 0x26
 785 00f9 00       		.byte	0
 786 00fa 49       		.uleb128 0x49
 787 00fb 13       		.uleb128 0x13
 788 00fc 00       		.byte	0
 789 00fd 00       		.byte	0
 790 00fe 12       		.uleb128 0x12
 791 00ff 2E       		.uleb128 0x2e
 792 0100 01       		.byte	0x1
 793 0101 3F       		.uleb128 0x3f
 794 0102 19       		.uleb128 0x19
 795 0103 03       		.uleb128 0x3
 796 0104 0E       		.uleb128 0xe
 797 0105 3A       		.uleb128 0x3a
 798 0106 0B       		.uleb128 0xb
 799 0107 3B       		.uleb128 0x3b
 800 0108 05       		.uleb128 0x5
 801 0109 27       		.uleb128 0x27
 802 010a 19       		.uleb128 0x19
 803 010b 49       		.uleb128 0x49
 804 010c 13       		.uleb128 0x13
 805 010d 11       		.uleb128 0x11
 806 010e 01       		.uleb128 0x1
 807 010f 12       		.uleb128 0x12
 808 0110 06       		.uleb128 0x6
 809 0111 40       		.uleb128 0x40
 810 0112 18       		.uleb128 0x18
 811 0113 9742     		.uleb128 0x2117
 812 0115 19       		.uleb128 0x19
 813 0116 01       		.uleb128 0x1
 814 0117 13       		.uleb128 0x13
 815 0118 00       		.byte	0
 816 0119 00       		.byte	0
 817 011a 13       		.uleb128 0x13
 818 011b 34       		.uleb128 0x34
 819 011c 00       		.byte	0
 820 011d 03       		.uleb128 0x3
 821 011e 0E       		.uleb128 0xe
 822 011f 3A       		.uleb128 0x3a
 823 0120 0B       		.uleb128 0xb
 824 0121 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 24


 825 0122 05       		.uleb128 0x5
 826 0123 49       		.uleb128 0x49
 827 0124 13       		.uleb128 0x13
 828 0125 02       		.uleb128 0x2
 829 0126 18       		.uleb128 0x18
 830 0127 00       		.byte	0
 831 0128 00       		.byte	0
 832 0129 14       		.uleb128 0x14
 833 012a 2E       		.uleb128 0x2e
 834 012b 00       		.byte	0
 835 012c 3F       		.uleb128 0x3f
 836 012d 19       		.uleb128 0x19
 837 012e 03       		.uleb128 0x3
 838 012f 0E       		.uleb128 0xe
 839 0130 3A       		.uleb128 0x3a
 840 0131 0B       		.uleb128 0xb
 841 0132 3B       		.uleb128 0x3b
 842 0133 05       		.uleb128 0x5
 843 0134 27       		.uleb128 0x27
 844 0135 19       		.uleb128 0x19
 845 0136 11       		.uleb128 0x11
 846 0137 01       		.uleb128 0x1
 847 0138 12       		.uleb128 0x12
 848 0139 06       		.uleb128 0x6
 849 013a 40       		.uleb128 0x40
 850 013b 18       		.uleb128 0x18
 851 013c 9742     		.uleb128 0x2117
 852 013e 19       		.uleb128 0x19
 853 013f 00       		.byte	0
 854 0140 00       		.byte	0
 855 0141 15       		.uleb128 0x15
 856 0142 2E       		.uleb128 0x2e
 857 0143 01       		.byte	0x1
 858 0144 3F       		.uleb128 0x3f
 859 0145 19       		.uleb128 0x19
 860 0146 03       		.uleb128 0x3
 861 0147 0E       		.uleb128 0xe
 862 0148 3A       		.uleb128 0x3a
 863 0149 0B       		.uleb128 0xb
 864 014a 3B       		.uleb128 0x3b
 865 014b 05       		.uleb128 0x5
 866 014c 27       		.uleb128 0x27
 867 014d 19       		.uleb128 0x19
 868 014e 49       		.uleb128 0x49
 869 014f 13       		.uleb128 0x13
 870 0150 11       		.uleb128 0x11
 871 0151 01       		.uleb128 0x1
 872 0152 12       		.uleb128 0x12
 873 0153 06       		.uleb128 0x6
 874 0154 40       		.uleb128 0x40
 875 0155 18       		.uleb128 0x18
 876 0156 9742     		.uleb128 0x2117
 877 0158 19       		.uleb128 0x19
 878 0159 00       		.byte	0
 879 015a 00       		.byte	0
 880 015b 00       		.byte	0
 881              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 25


 882              	.Ldebug_loc0:
 883              	.LLST0:
 884 0000 00000000 		.4byte	.LVL0
 885 0004 04000000 		.4byte	.LVL1
 886 0008 0200     		.2byte	0x2
 887 000a 30       		.byte	0x30
 888 000b 9F       		.byte	0x9f
 889 000c 04000000 		.4byte	.LVL1
 890 0010 0C000000 		.4byte	.LFE2
 891 0014 0100     		.2byte	0x1
 892 0016 50       		.byte	0x50
 893 0017 00000000 		.4byte	0
 894 001b 00000000 		.4byte	0
 895              	.LLST1:
 896 001f 00000000 		.4byte	.LVL4
 897 0023 0A000000 		.4byte	.LVL6
 898 0027 0100     		.2byte	0x1
 899 0029 50       		.byte	0x50
 900 002a 0A000000 		.4byte	.LVL6
 901 002e 16000000 		.4byte	.LVL11
 902 0032 0100     		.2byte	0x1
 903 0034 56       		.byte	0x56
 904 0035 16000000 		.4byte	.LVL11
 905 0039 18000000 		.4byte	.LFE6
 906 003d 0400     		.2byte	0x4
 907 003f F3       		.byte	0xf3
 908 0040 01       		.uleb128 0x1
 909 0041 50       		.byte	0x50
 910 0042 9F       		.byte	0x9f
 911 0043 00000000 		.4byte	0
 912 0047 00000000 		.4byte	0
 913              	.LLST2:
 914 004b 00000000 		.4byte	.LVL4
 915 004f 0A000000 		.4byte	.LVL6
 916 0053 0100     		.2byte	0x1
 917 0055 51       		.byte	0x51
 918 0056 0A000000 		.4byte	.LVL6
 919 005a 16000000 		.4byte	.LVL10
 920 005e 0100     		.2byte	0x1
 921 0060 55       		.byte	0x55
 922 0061 16000000 		.4byte	.LVL10
 923 0065 18000000 		.4byte	.LFE6
 924 0069 0400     		.2byte	0x4
 925 006b F3       		.byte	0xf3
 926 006c 01       		.uleb128 0x1
 927 006d 51       		.byte	0x51
 928 006e 9F       		.byte	0x9f
 929 006f 00000000 		.4byte	0
 930 0073 00000000 		.4byte	0
 931              	.LLST3:
 932 0077 06000000 		.4byte	.LVL5
 933 007b 0A000000 		.4byte	.LVL6
 934 007f 0200     		.2byte	0x2
 935 0081 30       		.byte	0x30
 936 0082 9F       		.byte	0x9f
 937 0083 0A000000 		.4byte	.LVL6
 938 0087 16000000 		.4byte	.LVL9
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 26


 939 008b 0100     		.2byte	0x1
 940 008d 54       		.byte	0x54
 941 008e 00000000 		.4byte	0
 942 0092 00000000 		.4byte	0
 943              		.section	.debug_aranges,"",%progbits
 944 0000 5C000000 		.4byte	0x5c
 945 0004 0200     		.2byte	0x2
 946 0006 00000000 		.4byte	.Ldebug_info0
 947 000a 04       		.byte	0x4
 948 000b 00       		.byte	0
 949 000c 0000     		.2byte	0
 950 000e 0000     		.2byte	0
 951 0010 00000000 		.4byte	.LFB2
 952 0014 0C000000 		.4byte	.LFE2-.LFB2
 953 0018 00000000 		.4byte	.LFB3
 954 001c 10000000 		.4byte	.LFE3-.LFB3
 955 0020 00000000 		.4byte	.LFB4
 956 0024 20000000 		.4byte	.LFE4-.LFB4
 957 0028 00000000 		.4byte	.LFB5
 958 002c 1C000000 		.4byte	.LFE5-.LFB5
 959 0030 00000000 		.4byte	.LFB6
 960 0034 18000000 		.4byte	.LFE6-.LFB6
 961 0038 00000000 		.4byte	.LFB7
 962 003c 10000000 		.4byte	.LFE7-.LFB7
 963 0040 00000000 		.4byte	.LFB8
 964 0044 20000000 		.4byte	.LFE8-.LFB8
 965 0048 00000000 		.4byte	.LFB9
 966 004c 10000000 		.4byte	.LFE9-.LFB9
 967 0050 00000000 		.4byte	.LFB10
 968 0054 10000000 		.4byte	.LFE10-.LFB10
 969 0058 00000000 		.4byte	0
 970 005c 00000000 		.4byte	0
 971              		.section	.debug_ranges,"",%progbits
 972              	.Ldebug_ranges0:
 973 0000 00000000 		.4byte	.LFB2
 974 0004 0C000000 		.4byte	.LFE2
 975 0008 00000000 		.4byte	.LFB3
 976 000c 10000000 		.4byte	.LFE3
 977 0010 00000000 		.4byte	.LFB4
 978 0014 20000000 		.4byte	.LFE4
 979 0018 00000000 		.4byte	.LFB5
 980 001c 1C000000 		.4byte	.LFE5
 981 0020 00000000 		.4byte	.LFB6
 982 0024 18000000 		.4byte	.LFE6
 983 0028 00000000 		.4byte	.LFB7
 984 002c 10000000 		.4byte	.LFE7
 985 0030 00000000 		.4byte	.LFB8
 986 0034 20000000 		.4byte	.LFE8
 987 0038 00000000 		.4byte	.LFB9
 988 003c 10000000 		.4byte	.LFE9
 989 0040 00000000 		.4byte	.LFB10
 990 0044 10000000 		.4byte	.LFE10
 991 0048 00000000 		.4byte	0
 992 004c 00000000 		.4byte	0
 993              		.section	.debug_line,"",%progbits
 994              	.Ldebug_line0:
 995 0000 2F010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 27


 995      02006300 
 995      00000201 
 995      FB0E0D00 
 995      01010101 
 996              	.LASF14:
 997 0000 72656733 		.ascii	"reg32\000"
 997      3200
 998              	.LASF24:
 999 0006 636F756E 		.ascii	"count\000"
 999      7400
 1000              	.LASF22:
 1001 000c 74784461 		.ascii	"txData\000"
 1001      746100
 1002              	.LASF3:
 1003 0013 73686F72 		.ascii	"short unsigned int\000"
 1003      7420756E 
 1003      7369676E 
 1003      65642069 
 1003      6E7400
 1004              	.LASF8:
 1005 0026 756E7369 		.ascii	"unsigned int\000"
 1005      676E6564 
 1005      20696E74 
 1005      00
 1006              	.LASF28:
 1007 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 1007      5F537069 
 1007      55617274 
 1007      44697361 
 1007      626C6549 
 1008              	.LASF11:
 1009 004c 666C6F61 		.ascii	"float\000"
 1009      7400
 1010              	.LASF30:
 1011 0052 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 1011      5F537069 
 1011      55617274 
 1011      44697361 
 1011      626C6549 
 1012              	.LASF19:
 1013 006b 73697A65 		.ascii	"size\000"
 1013      00
 1014              	.LASF5:
 1015 0070 6C6F6E67 		.ascii	"long unsigned int\000"
 1015      20756E73 
 1015      69676E65 
 1015      6420696E 
 1015      7400
 1016              	.LASF9:
 1017 0082 75696E74 		.ascii	"uint8\000"
 1017      3800
 1018              	.LASF18:
 1019 0088 72784461 		.ascii	"rxData\000"
 1019      746100
 1020              	.LASF23:
 1021 008f 77724275 		.ascii	"wrBuf\000"
 1021      6600
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 28


 1022              	.LASF1:
 1023 0095 756E7369 		.ascii	"unsigned char\000"
 1023      676E6564 
 1023      20636861 
 1023      7200
 1024              	.LASF12:
 1025 00a3 646F7562 		.ascii	"double\000"
 1025      6C6500
 1026              	.LASF10:
 1027 00aa 75696E74 		.ascii	"uint32\000"
 1027      333200
 1028              	.LASF27:
 1029 00b1 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 1029      5F537069 
 1029      55617274 
 1029      436C6561 
 1029      72547842 
 1030              	.LASF21:
 1031 00cb 55415254 		.ascii	"UART_SpiUartPutArray\000"
 1031      5F537069 
 1031      55617274 
 1031      50757441 
 1031      72726179 
 1032              	.LASF31:
 1033 00e0 696E7453 		.ascii	"intSourceMask\000"
 1033      6F757263 
 1033      654D6173 
 1033      6B00
 1034              	.LASF29:
 1035 00ee 696E7453 		.ascii	"intSource\000"
 1035      6F757263 
 1035      6500
 1036              	.LASF7:
 1037 00f8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1037      206C6F6E 
 1037      6720756E 
 1037      7369676E 
 1037      65642069 
 1038              	.LASF34:
 1039 010f 433A5C55 		.ascii	"C:\\Users\\Ellis\\Downloads\\PSoC_Creator\\capsense"
 1039      73657273 
 1039      5C456C6C 
 1039      69735C44 
 1039      6F776E6C 
 1040 013d 6C65645C 		.ascii	"led\\capsenseled.cydsn\000"
 1040      63617073 
 1040      656E7365 
 1040      6C65642E 
 1040      63796473 
 1041              	.LASF15:
 1042 0153 73697A65 		.ascii	"sizetype\000"
 1042      74797065 
 1042      00
 1043              	.LASF6:
 1044 015c 6C6F6E67 		.ascii	"long long int\000"
 1044      206C6F6E 
 1044      6720696E 
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 29


 1044      7400
 1045              	.LASF20:
 1046 016a 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1046      5F537069 
 1046      55617274 
 1046      57726974 
 1046      65547844 
 1047              	.LASF25:
 1048 0182 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 1048      5F537069 
 1048      55617274 
 1048      47657454 
 1048      78427566 
 1049              	.LASF32:
 1050 019e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1050      4320342E 
 1050      392E3320 
 1050      32303135 
 1050      30333033 
 1051 01d1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1051      20726576 
 1051      6973696F 
 1051      6E203232 
 1051      31323230 
 1052 0204 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1052      66756E63 
 1052      74696F6E 
 1052      2D736563 
 1052      74696F6E 
 1053              	.LASF2:
 1054 022c 73686F72 		.ascii	"short int\000"
 1054      7420696E 
 1054      7400
 1055              	.LASF33:
 1056 0236 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 1056      6E657261 
 1056      7465645F 
 1056      536F7572 
 1056      63655C50 
 1057              	.LASF16:
 1058 025f 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1058      5F537069 
 1058      55617274 
 1058      52656164 
 1058      52784461 
 1059              	.LASF4:
 1060 0276 6C6F6E67 		.ascii	"long int\000"
 1060      20696E74 
 1060      00
 1061              	.LASF13:
 1062 027f 63686172 		.ascii	"char\000"
 1062      00
 1063              	.LASF26:
 1064 0284 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 1064      5F537069 
 1064      55617274 
 1064      436C6561 
ARM GAS  C:\Users\Ellis\AppData\Local\Temp\ccHgbhb6.s 			page 30


 1064      72527842 
 1065              	.LASF0:
 1066 029e 7369676E 		.ascii	"signed char\000"
 1066      65642063 
 1066      68617200 
 1067              	.LASF17:
 1068 02aa 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1068      5F537069 
 1068      55617274 
 1068      47657452 
 1068      78427566 
 1069              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
